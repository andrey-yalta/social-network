{"version":3,"sources":["components/Posts/Post/Post.module.css","components/Posts/Posts.module.css","components/News/News.module.css","components/Dialogs/Dialogs.module.css","components/Navbar/Navbar.module.css","serviceWorker.js","api/api.js","redux/profile-reducer.js","redux/dialogs-reducer.js","redux/state.js","components/Navbar/Navbar.jsx","components/Dialogs/Message/Message.js","components/Dialogs/DialogItem/DialogItem.js","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.js","redux/users-reducer.js","components/common/Paginator/Paginator.js","components/Users/User.js","components/Users/Users.js","components/common/preloader/preloader.js","redux/users-selectors.js","components/Users/UsersContainer.js","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileStatus.js","components/Profile/ProfileInfo/profileDataForm.js","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Posts/Post/Post.js","components/Posts/Posts.js","components/Posts/PostsContainer.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.js","redux/app-reducer.js","redux/sidebar-reduser.js","redux/redux-store.js","components/News/News.js","App.js","index.js","components/common/FormsControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","assets/img/user.png","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","assets/img/circles.svg","components/Header/Header.module.css"],"names":["module","exports","post","stuff","news","content","dialogs","dialog","dialogsMessage","message_from","message_to","active","person","dialogsMessage_area","nav","sitebar","sitebar__items","sitebar__item","Boolean","window","location","hostname","match","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","unFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","Content-Type","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","initialState","postsData","id","text","like","setStatus","type","getUserProfile","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","sent","stop","_x","apply","this","profileReducer","state","action","newPost","newPostText","newState","objectSpread","toConsumableArray","push","photos","usersData","name","img","messageData","message","num","dialogsReducer","body","newMessageBody","store","_callSubscriber","log","_appState","profilePage","dialogsPage","subscribe","observer","getState","addPost","updatePostText","newText","Navbar","react_default","createElement","className","s","react_router_dom","to","activeClassName","src","alt","htmlFor","link","Message","props","source","msg","DialogItem","required","value","maxLength30Creator","maxLength","FormControl","input","_ref$meta","meta","touched","error","child","objectWithoutProperties","hasError","styles","formControl","children","Textarea","restProps","FormsControls_FormControl","assign","Input","createField","placeholder","validators","component","Field","validate","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Dialogs","messagePage","map","p","Dialogs_Message_Message","key","users","Dialogs_DialogItem_DialogItem","React","createRef","isAuth","dialogsItems","values","sendMessage","react_router","mapStateToPropsForRedirect","auth","compose","connect","sendMessageActionCreator","Component","WithAuthRedirect","_React$Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","totalUsersCount","isFetching","followingInProgress","followSuccess","unFollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnFollowFlow","_ref2","_callee2","apiMethod","actionCreator","_context2","resultCode","_x2","_x3","_x4","_x5","usersReducer","u","followed","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","e","User","user","unfollow","users__img","small","userPhoto","disabled","some","Users","common_Paginator_Paginator","Users_User","Preloader","circles","getUsersState","usersPage","getPageSize","createSelector","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UserAPIComponent","_this","Fragment","preloader","components_Users_Users","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","items","totalCount","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","useEffect","onDoubleClick","onChange","currentTarget","onBlur","autoFocus","ProfileDataFormReduxForm","style","formSummaryError","keys","contacts","contact","ProfileData","isOwner","goToEditMoe","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","ProfileInfo_Contact","contactTitle","contactValue","Contact","ProfileInfo","descriptionBlock","large","mainPhoto","target","profileDataForm","initialValues","ProfileInfo_ProfileData","Profile_ProfileStatusWithHooks","Post","Posts","memo","posts","Posts_Post_Post","Posts_AddNewPostForm","maxLength30","AddNewPostForm","PostsContainer","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","Posts_PostsContainer","ProfileContainer","params","authorizedUserId","history","refreshProfile","components_Profile_Profile","t0","alert","_ref5","_callee5","_context5","stopSubmit","_error","messages","abrupt","Promise","reject","withRouter","Header","login__block","login","logout","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","_response$data$data","_login","getCaptchaUrl","url","authReducer","HeaderContainer","components_Header_Header","LoginReduxForm","initialized","appReducer","sidebarReducer","reducers","combineReducers","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","createStore","applyMiddleware","thunkMiddleware","News","Music","lazy","__webpack_require__","Settings","App","catchAllUnhandledErrors","promiseRejectionEvent","initializeApp","addEventListener","removeEventListener","Header_HeaderContainer","components_Navbar_Navbar","path","render","DialogsContainer","Profile_ProfileContainer","UsersContainer","components_Login_Login","Suspense","fallback","components_News_News","AppContainer","promise","all","SamuraiJsApp","react_redux_es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","selected__page"],"mappings":"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","file":"static/js/main.d0baa84c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__Sy0ed\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stuff\":\"Posts_stuff__3rRcb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__3-QmH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Dialogs_content__u7BG5\",\"dialogs\":\"Dialogs_dialogs__1HiI3\",\"dialog\":\"Dialogs_dialog__2IoXR\",\"dialogsMessage\":\"Dialogs_dialogsMessage__26a_P\",\"message_from\":\"Dialogs_message_from__3Qtox\",\"message_to\":\"Dialogs_message_to__1l8qC\",\"active\":\"Dialogs_active__1WiVW\",\"person\":\"Dialogs_person__2vASa\",\"dialogsMessage_area\":\"Dialogs_dialogsMessage_area__3MYJN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2s6S0\",\"active\":\"Navbar_active__crDPk\",\"sitebar\":\"Navbar_sitebar__3WY4R\",\"sitebar__items\":\"Navbar_sitebar__items__3vz0U\",\"sitebar__item\":\"Navbar_sitebar__item__2_Wjb\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as axios from \"axios\";\n\n\n\n\nconst instance = axios.create({\nwithCredentials: true,\n    baseURL:`https://social-network.samuraijs.com/api/1.0/`,\n    headers:{\n        \"API-KEY\":\"5d16bb3c-e00e-4326-9938-6b442a102e86\"\n    }\n});\n\n\nexport const usersAPI  = {\n    getUsers (currentPage=1,pageSize=10)   {\n        return instance.get( `users?page=${currentPage}&count=${pageSize}`\n        )\n            .then(response=> { return response.data})\n    },\n    follow(userId){\n        debugger;\n        return instance.post(`follow/${userId}`)\n    },\n    unFollow(userId){\n       return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('obsolete message. please use api obj')\n        return profileAPI.getProfile(userId);\n    },\n}\nexport const profileAPI  = {\n    getProfile(userId){\n\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId){\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status){\n        return instance.put(`profile/status/`, {status:status});\n    },\n    savePhoto(file){\n        let formData = new FormData();\n        formData.append(\"image\", file)\n\n        return instance.put(`profile/photo`, formData, {\n            headers:{\n                \"Content-Type\":\"multipart/form-data\"\n            }\n        });\n    },\n    saveProfile(profile){\n        return instance.put(`profile`, profile);\n    }\n}\nexport const authAPI = {\n    me(){\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false, captcha= null){\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\n    },\n    logout( ){\n        return instance.delete(`auth/login` )\n    }\n}\n\n\nconst getUsers2 = (currentPage=1,pageSize=10) => {\n    return instance.get(`follow?page=${currentPage}&count=${pageSize}`\n)\n        .then(response=> { return response.data})\n}\nexport const securityAPI = {\n    getCaptchaUrl(){\n        return instance.get(`security/get-captcha-url`)\n    } \n}\n","import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\nlet initialState = {\n    postsData: [\n        {id: 1, text: \"Hello\", like: 12},\n        {id: 2, text: \"How are you, man?\", like: 11},\n        {id: 3, text: \"What interestind in your life?\", like: 1},\n        {id: 4, text: \"I'm glad to hear you!\", like: 5}],\n    profile: null,\n    status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5, text: action.newPostText, like: 0\n            };\n            let newState = {...state, postsData: [...state.postsData]}; //поверхностная и глубокая копия\n            newState.postsData.push(newPost);\n            newState.newPostText = \"\";\n            return newState\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile};\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status};\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {...state, profile: {...state.profile, photos:action.photos}};\n        }\n        default: {\n            return state\n        }\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => {\n    return {type: \"ADD-POST\", newPostText}\n};\nexport const setUserProfile = (profile) => {\n    return {type: \"SET_USER_PROFILE\", profile};\n};\nexport const setStatus = (status) => {\n    return {type: \"SET_STATUS\", status};\n};\nexport const savePhotoSuccess = (photos) => {\n    return {type: \"SAVE_PHOTO_SUCCESS\", photos};\n};\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n};\nexport const updateStatus = (status) => async (dispatch) => {\n    try {\n        let response = await profileAPI.updateStatus(status)\n        if (response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    } catch (error) {\n        alert(\"update status error\" + error)\n        //ЗДЕСЬ НАДО ЗАДИСПАТЧИТЬ ОШИБКУ\n    }\n};\nexport const savePhoto = (file)=> async(dispatch) =>{\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode ===0){\n        dispatch(savePhotoSuccess(response.data.data.photos) )\n    }\n};\n\nexport const saveProfile = (profile)=> async(dispatch, getState) =>{\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode ===0){\n        dispatch(getUserProfile(userId) )\n    }\n    else{\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\n        return Promise.reject(response.data.messages[0])\n    }\n\n};\n\nexport default profileReducer;","const SEND_MESSAGE = \"SEND-MESSAGE\";\nlet initialState ={\n    usersData : [\n        {id:1,name: \"Andrey\", img: \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\"},\n        {id:2,name: \"Alexandr\", img:\"https://f0.pngfuel.com/png/348/800/man-wearing-blue-shirt-illustration-png-clip-art.png\"},\n        {id:3,name: \"Darya\", img:\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRzWBXtpWI3XwVykdZn77ybq7FPMu8BVLP-JA&usqp=CAU\"},\n        {id:4,name: \"Ivan\", img:\"https://cdn.imgbin.com/17/23/24/imgbin-computer-icons-teacher-pedagogy-education-experience-teacher-zdGVV5hRG7KR9fzeBqRr2SzmG.jpg\"},],\n    messageData : [\n        {id:1,message: \"Hello\", num: 1},\n        {id:2,message: \"How are you, man?\", num: 0},\n        {id:3,message: \"What interestind in your life?\", num: 1},\n        {id:4,message: \"I'm glad to hear you!\",num: 0},],\n\n};\nconst dialogsReducer =(state = initialState, action)=>{\n    let stateCopy = {...state, messageData:[...state.messageData],}\n    switch (action.type) {\n        case SEND_MESSAGE:\n            let body = action.newMessageBody;\n            return {...state,messageData:[...state.messageData,{id:6,message:body}]};\n\n        default:\n            return state;\n    }\n}\nexport const sendMessageActionCreator = (newMessageBody) =>{\n    return {type:SEND_MESSAGE,newMessageBody}\n}\nexport default dialogsReducer;","import React from 'react';\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\nlet store ={\n     _callSubscriber(){\n        console.log(\" state was changed\")\n    },\n    _appState :{\n\n        profilePage:{\n            postsData: [\n                {id:1,text: \"Hello\", like:12},\n                {id:2,text: \"How are you, man?\",like:11},\n                {id:3,text: \"What interestind in your life?\",like:1},\n                {id:4,text: \"I'm glad to hear you!\",like: 5}],\n            newPostText:\"it-camasutra.com\"\n\n        },\n        dialogsPage:{\n            usersData : [\n                {id:1,name: \"Andrey\", img: \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\"},\n                {id:2,name: \"Alexandr\", img:\"https://f0.pngfuel.com/png/348/800/man-wearing-blue-shirt-illustration-png-clip-art.png\"},\n                {id:3,name: \"Darya\", img:\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRzWBXtpWI3XwVykdZn77ybq7FPMu8BVLP-JA&usqp=CAU\"},\n                {id:4,name: \"Ivan\", img:\"https://cdn.imgbin.com/17/23/24/imgbin-computer-icons-teacher-pedagogy-education-experience-teacher-zdGVV5hRG7KR9fzeBqRr2SzmG.jpg\"},],\n            messageData : [\n                {id:1,message: \"Hello\", num: 1},\n                {id:2,message: \"How are you, man?\", num: 0},\n                {id:3,message: \"What interestind in your life?\", num: 1},\n                {id:4,message: \"I'm glad to hear you!\",num: 0},],\n            newMessageBody:\"\",\n        },\n\n\n\n    },\n\n    subscribe(observer){\n        this._callSubscriber = observer;        // это короче паттерн обсерв. надо почитать!\n    },\n    getState(){\n         return this._appState;\n    },\n\n    addPost() {\n        let newPost ={\n            id:5,text:this._appState.profilePage.newPostText, like:0\n        };\n\n        this._appState.profilePage.postsData.push(newPost);\n        this._appState.profilePage.newPostText = \"\";\n        this._callSubscriber(this._appState);\n    },\n    updatePostText(newText) {\n        this._appState.profilePage.newPostText = newText;\n        this._callSubscriber(this._appState);\n    },\n    dispatch(action){ //type:'ADD-POST'\n        this._appState.profilePage = profileReducer(this._appState.profilePage, action);\n        this._appState.dialogsPage = dialogsReducer(this._appState.dialogsPage, action);\n        this._callSubscriber(this._appState)\n    },\n\n\n};\nwindow.store = store;    //интересная вещь, возволяет просматривать элемент в консоле браузера\nexport default store;","import React from 'react';\r\nimport s from \"./Navbar.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div>\r\n                <NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/login\"} activeClassName={s.active}>Login</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/users\"} activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink>\r\n            </div>\r\n            <div className={s.sitebar}>\r\n                <h3>Friends</h3>\r\n                <div className={s.sitebar__items}>\r\n                    <div className={s.sitebar__item}>\r\n                        <img src=\"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\" alt=\"\"/>\r\n                        <h4>Petya</h4>\r\n                        <label htmlFor=\"\">online</label>\r\n                    </div>\r\n                    <div className={s.sitebar__item}>\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRzWBXtpWI3XwVykdZn77ybq7FPMu8BVLP-JA&usqp=CAU\" alt=\"\"/>\r\n                        <h4>Sveta</h4>\r\n                        <label htmlFor=\"\">offline</label>\r\n                    </div>\r\n                    <div className={s.sitebar__item}>\r\n                        <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRzWBXtpWI3XwVykdZn77ybq7FPMu8BVLP-JA&usqp=CAU\" alt=\"\"/>\r\n                        <h4>Ivan</h4>\r\n                        <label htmlFor=\"\">online</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>)\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nlet link = \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\";\nconst Message = (props)=>{\n\n        if(props.source ===1){\n            return(\n\n            <div className={s.message_from}>  <img className={s.person} src={link} alt=\"person\"/> {props.msg}</div>\n            )\n        }\n        else{\n            return(\n        <div className={s.message_to}>   {props.msg} <img className={s.person} src={link} alt=\"person\"/></div>\n                )\n            }\n\n\n}\nexport default Message","import React from 'react';\nimport s from \"./../Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\n\n\nconst DialogItem = (props)=>{\n    return(\n        <div className={s.dialog +' '+s.active}>\n            <img  className={s.person} src={props.img} alt=\"\"/>\n            <NavLink to={\"/dialogs/\"+props.id}>{props.name}</NavLink>\n        </div>\n    )\n}\nexport default DialogItem","export const required = value =>{\n    if(value) return undefined;\n     return \"Field is required\"\n}\n\nexport const maxLength30Creator =(maxLength) => (value) =>{\n    debugger;\n    if(  value.length >  maxLength  ) return  `Max ${maxLength} symbols`;\n     return undefined;\n}\n","import React from \"react\"\nimport styles from \"./FormControls.module.css\"\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl =({input, meta:{touched,error}, child, ...props}) =>{\n    const hasError = touched && error;\n    return(\n        <div className={styles.formControl  + \" \" + (hasError ? styles.error:\" \")}>\n            <div>\n                {props.children}\n            </div>\n            {hasError && <span>{error}</span> }\n        </div>\n    )\n}\n\n\nexport const Textarea  = (props) =>{\n    const {input, meta, child, ...restProps} = props;\n    return(<FormControl {...props}>  <textarea {...input}{...restProps}/> </FormControl>)\n}\n\n\nexport const Input  = (props) =>{\n    const {input, meta, child, ...restProps} = props;\n    return(<FormControl {...props}>  <input   {...input}{...restProps}/> </FormControl>)\n}\n\nexport const createField =(placeholder, name,validators,component,props ={}, text =\"\")=>\n    <div><Field placeholder={\"Password\"} name={name} type={\"password\"}\n           validate={validators}\n           component={component}\n                {...props}/> {text}\n    </div>\n","import React from 'react';\nimport s from \"./Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../redux/dialogs-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport handleSubmit from \"redux-form/lib/handleSubmit\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\nimport {maxLength30Creator, required} from \"../../utils/validators/validators\";\n\nconst Dialogs = (props)=>{\n    // let messagePage = props.messagePage;\n\n    let dialogs = props.messagePage.messageData.map(p=> <Message msg={p.message} key={p.id} source={p.num}/>)\n    let users = props.messagePage.usersData.map(p=><DialogItem name={p.name} id={p.id} key={p.id} img={p.img}/>)\n    let newMessageBody = props.messagePage.newMessageBody;\n    let newMessageElement = React.createRef();\n\n    // let addMessage =()=>{\n    //     props.sendMessage();\n    // }\n    // let onNewMessageChange = (e)=>{\n    //     let body = e.target.value;\n    //     props.updateNewMessageBody(body);\n    // }\n    let addNewMessage = (values)=>{\n        props.sendMessage(values.newMessageBody);\n    }\n    if (!props.isAuth ) return <Redirect to={\"/login\"}/>\n\n    return(\n            <div className={s.dialogs}>\n                <div className={s.dialogsItems}>\n                    {users}\n                </div>\n                <div className={s.dialogsMessage}>\n                    {dialogs}\n                    <AddMessageFormRedux onSubmit={addNewMessage}/>\n                </div>\n            </div>\n    )\n}\nconst maxLength = maxLength30Creator(100);\nconst AddMessageForm = (props) =>{\n    return(\n        <form  onSubmit={props.handleSubmit} className={s.dialogsMessage_area}>\n        <div>\n            <Field component={Textarea} validate={[required, maxLength]} name={\"newMessageBody\"} placeholder={\"Enter your message\"}/>\n            {/*<textarea placeholder={\"Enter Your message\"} value={newMessageBody} onChange={onNewMessageChange} ref={newMessageElement}/>*/}\n        </div>\n        <div>\n            <button>Send Message</button>\n        </div>\n    </form>)\n}\nconst AddMessageFormRedux = reduxForm({form:\"dialogAddMessageForm\"})(AddMessageForm);\nexport  default Dialogs;","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state)=>({\n    isAuth: state.auth.isAuth,\n});\nexport  const WithAuthRedirect = (Component)=>{\n    class WithAuthRedirect extends React.Component {\n        render() {\n\n            return <Component {...this.props}/>\n\n        }\n    }\n\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(WithAuthRedirect);\n    return ConnectedAuthRedirectComponent;\n}\n","import React from 'react';\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {Redirect} from \"react-router-dom\";\nimport {compose} from \"redux\";\nimport {WithAuthRedirect} from \"../../hoc/withAuthRedirect\";\n\n\nlet mapStateToProps =(state)=>{\n    return{\n    messagePage:state.dialogsPage,\n    // isAuth: state.auth.isAuth,\n    }\n}\nlet mapDispatchToProps = (dispatch)=>{\n    return{\n        // updateNewMessageBody: (body)=>{\n        //     dispatch(updateNewMessageBodyActionCreator(body));\n        // },\n        sendMessage: (newMessageBody)=>{\n            dispatch(sendMessageActionCreator(newMessageBody));\n        },\n    }\n}\n\n\nexport  default compose(connect(mapStateToProps, mapDispatchToProps),WithAuthRedirect)(Dialogs);","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = \"FOLLOW\";\nconst UNFOLLOW =\"UNFOLLOW\";\nconst SETUSERS=\"SET-USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nconst TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\";\n\nlet link = \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\";\nlet initialState = {\n    users: [\n        // {id:1,photoUrl:link, name: \"Dmitriy\", status:\"Hello world\", location:{city:\"Minsk\", country:\"Belarus\"}, followed:true},\n        // {id:2,photoUrl:link, name: \"Ivan\", status:\"I am a boss\", location:{city:\"Moscow\", country:\"Russia\"}, followed:false},\n        // {id:3,photoUrl:link, name: \"Tanya\", status:\"ha ha ha\", location:{city:\"Kiev\", country:\"Ucraine\"}, followed:true},\n    ],\n    pageSize:5,\n    totalUsersCount: 21,\n    currentPage: 3,\n    newPostText:\"it-camasutra.com\",\n    isFetching:false,\n    followingInProgress:[2,3],\n};\nconst usersReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case FOLLOW:\n            debugger;\n            return {\n                ...state,\n                // users:updateObjectInArray(state.users,action.userId,\"id\",{followed: true})\n                    users: state.users.map(u => {\n                        if (u.id === action.userId) {\n                            return {...u, followed: true}\n                        }\n                        return u;\n                    })\n                }\n\n        case UNFOLLOW:\n\n            return {\n                ...state,\n                // users:updateObjectInArray(state.users,action.userId,\"id\",{followed: false})\n                users: state.users.map(u => {\n                    if (u.id === action.userId) {\n                        return {...u, followed: false}\n                    }\n                    return u;\n                })\n            }\n        case SETUSERS:\n            return {\n                ...state,users: action.users,\n            }\n        case SET_CURRENT_PAGE:\n            return {\n                ...state,currentPage: action.p\n            }\n        case SET_TOTAL_USERS_COUNT:\n\n            return {\n\n                ...state, totalUsersCount:action.totalUsersCount\n            }\n        case TOGGLE_IS_FETCHING:\n            return {\n                ...state, isFetching: action.isFetching\n            }\n\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\n            // debugger;\n            return {\n\n              ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n\n        default:{\n            return state}\n    }};\n\nexport const followSuccess =(userId) =>{\n    return {type:\"FOLLOW\",userId}\n};\nexport const unFollowSuccess = (userId) =>{\n    return {type:'UNFOLLOW',userId}\n};\nexport const setUsers = (users) =>{\n    return {type:\"SET-USERS\",users}\n};\nexport const setCurrentPage = (p) =>{\n    return {type:\"SET_CURRENT_PAGE\", p}\n};\nexport const setTotalUsersCount = (totalUsersCount) =>{\n    return {type:\"SET_TOTAL_USERS_COUNT\", totalUsersCount}\n};\nexport const toggleIsFetching = (isFetching) =>{\n    return{type:\"TOGGLE_IS_FETCHING\", isFetching}\n}\nexport const toggleFollowingProgress  = (isFetching, userId) =>{\n    return{type:\"TOGGLE_IS_FOLLOWING_PROGRESS\", isFetching, userId}\n}\n\nexport const getUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true)); //эта херня нужная чтобы включать и выключать анимацию\n        dispatch(setCurrentPage(page)); // доделывали,надо разобрать\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n    }\n\nexport const followUnFollowFlow = async (dispatch, userId, apiMethod, actionCreator) =>{\n    dispatch(toggleFollowingProgress(true, userId));\n    debugger;\n    let response = await apiMethod(userId);\n    if (response.data.resultCode ===0){\n        debugger;\n        dispatch(actionCreator(userId));\n    }\n    debugger;\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow =(userId) =>{\n\n    return async (dispatch) =>{\n        followUnFollowFlow(dispatch, userId, usersAPI.follow.bind(userId), followSuccess);\n    }\n}\n\n\nexport const unFollow =(userId) =>{\n    return async (dispatch) =>{//это санка\n        followUnFollowFlow(dispatch, userId, usersAPI.unFollow.bind(userId), unFollowSuccess);\n    }\n}\n\n\nexport default usersReducer;","// import React, {useState} from 'react';\n// import s from \"./Paginator.module.css\";\n//\n// let Paginator = ({currentPage, totalItemsCount,pageSize,onPageChanged, portionSize = 10}) => {\n//\n//     let pagesCount = Math.ceil(totalItemsCount / pageSize);\n//\n//\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i)\n//     }\n//\n//     return <div>\n//             {pages.map(p => {\n//                     return (\n//                         <span className={currentPage === p && s.selected__page}\n//                               onClick={(e) => {\n//                                   onPageChanged(p)\n//                               }}> {p}</span>\n//                     )\n//             })}\n//         </div>\n// }\n//\n// export default Paginator;\nimport React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/img/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {unFollowText} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport {usersAPI} from \"../../api/api\";\nimport Paginator from \"../common/Paginator/Paginator\";\n\n\nlet User = ({user,followingInProgress,unfollow,follow }) => {\n    let u =user ;\n    let linkImg = \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\";\n\n    return <div>\n       <div className={s.users} >\n                <span>\n                    <div>\n                        <NavLink to={\"/profile/\" +u.id}>\n                             <img className={s.users__img} src={u.photos.small != null ? u.photos.small : userPhoto}\n                                  alt=\"\"/>\n                        </NavLink>\n                    </div>\n                    <div>\n                        {\n                            u.followed\n                                ?  <button disabled={followingInProgress.some(id=> id === u.id)} onClick={() => {\n\n                                    unfollow(u.id);\n\n                                    }}>UnFollow</button> :\n\n                                <button  disabled={followingInProgress.some(id=> id === u.id)} onClick={() => {\n                                   follow(u.id);\n                                        }}> Follow</button>\n                        }}\n                    </div>\n                </span>\n                    <span>\n                    <span>\n                        <div>{u.name}</div>\n                        <div>{u.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"u.location.city\"}</div>\n                        <div>{\"u.location.country\"}</div>\n                    </span>\n                </span>\n                </div>\n            )\n        }\n    </div>\n}\nexport default User;","// import React from 'react';\n// import s from \"./Users.module.css\";\n// import userPhoto from \"../../assets/img/user.png\";\n// import {NavLink} from \"react-router-dom\";\n// import {unFollowText} from \"../../redux/users-reducer\";\n// import * as axios from \"axios\";\n// import {usersAPI} from \"../../api/api\";\n// import Paginator from \"../common/Paginator/Paginator\";\n//\n//\n// let Users = (props) => {\n//     let linkImg = \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\";\n//     // let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n//     // let pages = [];\n//     // for (let i = 1; i <= pagesCount; i++) {\n//     //     pages.push(i)\n//     // }\n//     return <div>\n//         <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\n//                    totalUsersCount={props.totalUsersCount} pageSize={props.pageSize} />\n//\n//         {\n//             props.users.map(u => <div className={s.users} key={u.id}>\n//                 <span>\n//                     <div>\n//                         <NavLink to={\"/profile/\" +u.id}>\n//                              <img className={s.users__img} src={u.photos.small != null ? u.photos.small : userPhoto}\n//                                   alt=\"\"/>\n//                         </NavLink>\n//                     </div>\n//                     <div>\n//                         {\n//                             u.followed\n//                                 ?  <button disabled={props.followingInProgress.some(id=> id === u.id)} onClick={() => {\n//\n//                                     props.unfollow(u.id);\n//\n//                                     }}>UnFollow</button> :\n//\n//                                 <button  disabled={props.followingInProgress.some(id=> id === u.id)} onClick={() => {\n//                                     props.follow(u.id);\n//                                         }}> Follow</button>\n//                         }}\n//                     </div>\n//                 </span>\n//                     <span>\n//                     <span>\n//                         <div>{u.name}</div>\n//                         <div>{u.status}</div>\n//                     </span>\n//                     <span>\n//                         <div>{\"u.location.city\"}</div>\n//                         <div>{\"u.location.country\"}</div>\n//                     </span>\n//                 </span>\n//                 </div>\n//             )\n//         }\n//     </div>\n// }\n// export default Users;\nimport React from 'react';\nimport s from \"./Users.module.css\";\nimport userPhoto from \"../../assets/img/user.png\";\nimport {NavLink} from \"react-router-dom\";\nimport {unFollowText} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport {usersAPI} from \"../../api/api\";\n\n\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\n\nlet Users = (props) => {\n    let linkImg = \"https://img.favpng.com/25/1/17/avatar-user-computer-icons-software-developer-png-favpng-7SbFpNeqKqhhTrrrnHFUqk6U4.jpg\";\n    return (<div>\n        <Paginator currentPage={props.currentPage} onPageChanged={props.onPageChanged}\n                   totalItemsCount={props.totalUsersCount} pageSize={props.pageSize}/>\n        <div>\n            {\n                props.users.map(u => <User user={u}\n                                           key={u.id}\n                                           followingInProgress={props.followingInProgress}\n                                           follow={props.follow}\n                                           unfollow={props.unfollow}/>)\n            }\n        </div>\n    </div>)\n}\n\n\nexport default Users;\n\n\n\n","import circles from \"../../../assets/img/circles.svg\";\nimport React from \"react\";\n\nlet Preloader =(props) =>{\n   return <div>\n       <img src={circles} alt={\"waiting please\"}/>\n        </div>\n}\nexport default Preloader;","import {createSelector} from \"reselect\";\n\nexport const getUsersState =(state)=>{\n    return state.usersPage.users;\n\n}\nexport const getUsersSuperSelector = createSelector(getUsersState,(users)=>{\n    return users.filter(u => true);\n})\n\nexport const getPageSize =(state)=>{\n    return state.usersPage.pageSize;\n\n}\nexport const getTotalUsersCount =(state)  =>{\n   return  state.usersPage.totalUsersCount;\n}\nexport const getCurrentPage =(state)  =>{\n    return  state.usersPage.currentPage;\n}\nexport const getIsFetching =(state)  =>{\n    return  state.usersPage.isFetching;\n}\nexport const getFollowingInProgress =(state)  =>{\n    return  state.usersPage.followingInProgress;\n}\n\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, getUsers, getUsersThunkCreator,\n    setCurrentPage, setTotalUsersCount,\n    setUsers, toggleFollowingProgress, toggleIsFetching, unFollow,\n} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport {usersAPI} from \"../../api/api\";\nimport {\n    getCurrentPage, getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersState\n} from \"../../redux/users-selectors\";\n\n\n\nclass UserAPIComponent extends React.Component{\n\n    componentDidMount() {//данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n        this.props.getUsers(this.props.currentPage,this.props.pageSize);\n        //\n        // this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n        //\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers( data.items)\n        //     this.props.setTotalUsersCount( data.totalCount)\n        // })\n    }\n    onPageChanged =(p) =>{\n        this.props.getUsers(p,this.props.pageSize);\n        // this.props.setCurrentPage(p);\n        // this.props.toggleIsFetching(true);\n        //\n        // usersAPI.getUsers(p,this.props.pageSize).then(data =>{\n        //     this.props.setUsers( data.items)\n        //     this.props.toggleIsFetching(false);\n        //\n        // })\n\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unFollow}\n                   toggleFollowingProgress ={this.props.toggleFollowingProgress}\n                   followingInProgress ={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return{\n\n        users:getUsersState(state),\n        pageSize:getPageSize(state),\n        totalUsersCount:getTotalUsersCount(state),\n        currentPage:getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\nexport default connect(mapStateToProps,\n    {follow,unFollow,\n        toggleFollowingProgress, setCurrentPage,\n         getUsers})( UserAPIComponent);","import React, {useEffect, useState} from \"react\";\n\n\n\n\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n    const activateEditMode = ()=>{\n        setEditMode(true);\n    }\n    const deactivateEditMode = ()=>{\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n    const onStatusChange = (e)=>{\n        setStatus(e.currentTarget.value);\n    }\n    useEffect(()=>{\n        setStatus(props.status);\n    }, [props.status]) //выполняет когда прогрузили страницу\n    return (\n        <div>\n\n            {!editMode &&\n            <div>\n               <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"---\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input   onChange={onStatusChange} onBlur={deactivateEditMode} value={status} autoFocus={true}/>\n            </div>\n            }\n        </div>\n    )\n}\nexport default ProfileStatusWithHooks;","import React from \"react\";\n\n \nclass ProfileStatus  extends React.Component {\n\n    state = {\n        editMode:false,\n        status:this.props.status\n\n    }\n    activateEditMode = () =>{\n        this.setState({ // асинхронный !\n            editMode:true\n        })\n    }\n    deactivateEditMode =() =>{\n        this.setState({ // асинхронный !\n            editMode:false\n        })\n        this.props.updateStatus( this.state.status );\n    }\n    onStatusChange = (e)=>{\n        this.setState({status: e.currentTarget.value})\n    }\n    componentDidUpdate (prevProps, prevState){\n        if(prevProps.status !== this.props.status){\n         this.setState({status:this.props.status})\n        }\n    }\n\n    render() {\n        return (\n            <div>\n\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode} >{this.props.status || \"---\" }</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} onBlur={this.deactivateEditMode} autoFocus={true} type=\"text\" value={this.state.status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from \"react\";\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {reduxForm} from \"redux-form\";\nimport s from './ProfileInfo.module.css';\n\nimport style from \"../../common/FormsControls/FormControls.module.css\";\nconst ProfileDataForm = ({handleSubmit, profile, error }) => {\n    return <form onSubmit={ handleSubmit}>\n        <div><button >\n            save\n        </button></div>\n\n        { error && <div className={style.formSummaryError}>\n            {error}\n        </div>\n        }\n\n        <div>\n            <b>Full name:</b> {createField(\"full name\", \"name\",[],Input)}\n        </div>\n        <div>\n            <b>Looking for a job:</b>\n            {createField(\" \", \"lookingForAJob\",[],Input, {type:\"checkbox\"})}\n        </div>\n\n        <div>\n            <b>My professional skills:</b>\n            {createField(\"My professional skills\", \"lookingForAJobDescription\",[],Textarea)}\n        </div>\n\n\n        <div>\n            <b>About me:</b>\n            {createField(\"About me\", \"aboutMe\",[],Textarea)}\n        </div>\n        <div>\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(key => {\n            return <div key={key} className={s.contact}>\n                <b>{key}: {createField(key, \"contacts.\" +key,[],Input)} </b>\n            </div>\n        })}\n        </div>\n    </form>\n}\n\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport ProfileStatus from \"../ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/img/user.png\";\r\nimport  ProfileDataFormReduxForm from \"./profileDataForm\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const mainPhotoSelectedOn =(e)=>{\r\n        if(e.target.file.length){\r\n            props.savePhoto(e.target.file[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit =  (formData) => {\r\n         props.saveProfile(formData).then(\r\n             ()=>{\r\n                 setEditMode(false);\r\n             }\r\n         );\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {/*  <div>\r\n                <img\r\n                    src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350'/>\r\n            </div>*/}\r\n            <div className={s.descriptionBlock}>\r\n                <img src={props.profile.photos.large || userPhoto } className={s.mainPhoto} />\r\n                {props.isOwner && <input type={\"file\"} onChange={mainPhotoSelectedOn} />}\r\n               {/*ВОЗМОЖНО НАДО ПОСЛЕ ЗНАКА ВОПРОСА ПРОСТО ПРОФАЙЛ ДАТА ФОРМ*/}\r\n                {editMode ? <ProfileDataFormReduxForm initialValues={props.profile} onSubmit={onSubmit} profile={props.profile}/>:\r\n                    <ProfileData profile={props.profile } isOwner={props.isOwner} goToEditMoe={()=>{setEditMode(true)}}/>}\r\n\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner , goToEditMoe}) => {\r\n    return <div>\r\n        {isOwner && <div><button onClick={goToEditMoe}>\r\n            edit\r\n        </button></div>}\r\n        <div>\r\n            <b>Full name:</b> {profile.fullName}\r\n        </div>\r\n        <div>\r\n            <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n        </div>\r\n        {profile.lookingForAJob &&\r\n        <div>\r\n            <b>My professional skills:</b> {profile.lookingForAJobDescription}\r\n        </div>\r\n\r\n        }\r\n        <div>\r\n            <b>About me:</b> {profile.aboutMe}\r\n        </div>\r\n        <div>\r\n            <b>Contacts:</b> {Object.keys(profile.contacts).map(p => {\r\n            return <Contact   contactTitle={p} contactValue={profile.contacts[p]}/>\r\n        })}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\n\r\nconst Contact = ({contactTitle , contactValue}) =>{\r\n    return <div className={s.contact}>\r\n        <b>{contactTitle} </b>: {contactTitle}\r\n    </div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\nimport s from \"./Post.module.css\";\nconst Post = (props)=>{\n    return(\n        <div className={s.post}>\n            <img src=\"https://sefon.pro/img/artist_photos/ava-max.jpg\" alt=\"\"/>\n            <p>{props.text}</p>\n            <label >like {props.like}</label>\n        </div>\n    )\n}\nexport default Post;","import React from 'react';\nimport Post from \"./Post/Post\";\nimport s from \"./Posts.module.css\"\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLength30Creator, required} from \"../../utils/validators/validators\";\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\n\n\nconst  Posts = React.memo(props =>{ // функция мемо нуэжна чтобы постоянно не перерндерить страницу, а проверять есть ли изменения в пропсах\n\n    let newPostElement = React.createRef();\n\n    let addPost =(values)=>{\n        props.addPost(values.newPostText);\n        debugger;\n    }\n\n    let posts = props.postsData.map(p =><Post  key={p.id} text={p.text} like={p.like}/>)\n    return(\n        <div className={s.stuff}>\n            <h2>My posts</h2>\n            <AddNewPostForm onSubmit={addPost}/>\n            {posts}\n        </div>\n    )\n});\n\nconst maxLength30 = maxLength30Creator(30);\nlet AddNewPostForm =(props)=>{\n    return(<form onSubmit={props.handleSubmit}>\n        <div>\n            <Field  placeholder={\"post message\"} component={Textarea} name={\"newPostText\"  } validate={[required,maxLength30]}/>\n        </div>\n        <div>\n            <button>Add Post</button>\n        </div>\n    </form>)\n}\nAddNewPostForm = reduxForm({form:\"ProfileAddNewPostForm\"})(AddNewPostForm);\nexport default Posts","import React from 'react';\nimport {addPostActionCreator, newPostTextActionCreator} from \"../../redux/profile-reducer\";\nimport Posts from \"./Posts\";\nimport {connect} from \"react-redux\";\n\n\n// const PostsContainer = ()=>{\n//\n//     return(\n//         <StoreContext.Consumer>\n//             {\n//                 (store)=> {\n//                     let state = store.getState();\n//                     let addPost =()=>{\n//                         store.dispatch(addPostActionCreator());\n//                     }\n//                     let onPostChange = (text) =>{\n//                         store.dispatch(newPostTextActionCreator(text));\n//                     }\n//                     return (<Posts addPost={addPost}\n//                                updateNewPostText={onPostChange}\n//                                postsData={state.profilePage.postsData}\n//                                newPostText={state.profilePage.newPostText}/>)\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nconst mapStateToProps = (state)=>{\n    return{\n        postsData:state.profilePage.postsData,\n        newPostText:state.profilePage.newPostText,\n\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n\n\n    return {\n\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        },\n        // updateNewPostText: (text) => {\n        //     dispatch(newPostTextActionCreator(text));\n        // },\n    }\n}\n\nconst PostsContainer = connect(mapStateToProps,mapDispatchToProps)(Posts);\n\nexport default PostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport PostsContainer from \"../Posts/PostsContainer\";\r\nconst Profile = (props) => {\r\n    debugger;\r\n    return <div className='content'>\r\n    <ProfileInfo savePhoto={props.savePhoto}\r\n                 isOwner={props.isOwner}\r\n                 profile = {props.profile}\r\n                 status = {props.status}\r\n                 updateStatus = {props.updateStatus}\r\n                 saveProfile = {props.saveProfile}\r\n    />\r\n    <PostsContainer />\r\n  </div>\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n\r\n    //ДОРАБОТАТЬ !!!!\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if(this.props.match.params.userId !== prevState.match.params.userId)\r\n    //     this.refreshProfile()\r\n    // }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto ={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}/>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from \"./Header.module.css\";\r\nimport {NavLink} from \"react-router-dom\";\r\nconst Header = (props) => {\r\n    return <header className='header'>\r\n        <img className={s.img} src='https://www.freelogodesign.org/Content/img/logo-ex-7.png'/>\r\n        <div className={s.login__block}>\r\n            { props.isAuth?\r\n                <div>{props.login} - <button onClick={props.logout}> LogOut</button> </div> : <NavLink to={\"/login\"}>\r\n                Login\r\n            </NavLink>}\r\n            \r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI,securityAPI} from \"../api/api\";\n\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\nconst GET_CAPTCHA_URL_SUCCESS = \"GET_CAPTCHA_URL_SUCCESS\";\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false,\n    captchaUrl: null,\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n        case GET_CAPTCHA_URL_SUCCESS:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default:\n            return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}  });\n\nexport const getCaptchaUrlSuccess = (captchaUrl) => ({type: GET_CAPTCHA_URL_SUCCESS, payload:\n        {captchaUrl}  });\n\nexport const getAuthUserData = () => async (dispatch) => {\n      let response = await authAPI.me()\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n}\n\nexport const login = (email, password, rememberMe, captcha) => async(dispatch) => {\n     let response = await authAPI.login(email, password, rememberMe, captcha);\n            if (response.data.resultCode === 0) {\n                //success, get auth data\n                dispatch(getAuthUserData())\n            }\n            else{\n                if(response.data.resultCode === 10){\n                    dispatch(getCaptchaUrl());\n                }\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n            }\n}\n\nexport const getCaptchaUrl = () => async(dispatch) => {\n    const response = await securityAPI.getCaptchaUrl();\n    const captchaUrl = response.data.url;\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\n}\n\nexport const logout = () => async(dispatch) => {\n    let response = await authAPI.logout()\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport * as axios from \"axios\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\nimport {auhAPI} from \"../../api/api\";\r\n\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n\r\n    render(){\r\n        return <Header {...this.props}/>\r\n    }\r\n\r\n\r\n}\r\nconst mapStateToProps  = (state) =>({\r\n    isAuth:state.auth.isAuth,\r\n    login:state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormControls.module.css\"\nimport {createField} from \"../common/FormsControls/FormsControls\";\nconst LoginForm = ({handleSubmit,error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {/*<div>*/}\n            {/*    <Field placeholder={\"Email\"} name={\"email\"}*/}\n            {/*           validate={[required]}*/}\n            {/*           component={Input}/>*/}\n            {/*</div>*/}\n\n                {createField(\"Email\",\"email\",[required],Input, {type:\"email\"})}\n                {createField(\"Password\",\"password\",[required],Input, {type:\"password\"})}\n                {createField(null,\"rememberMe\",[],Input, {type:\"checkbox\"}, \"remember me\")}\n                {/*<Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}*/}\n                {/*       validate={[required]}*/}\n                {/*       component={Input}/>*/}\n\n            {/*<div>*/}\n            {/*    <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me*/}\n            {/*</div>*/}\n            { captchaUrl && <img src={captchaUrl} alt=\"captcha\"/> }\n            { captchaUrl && createField(\"Symmbols from image\",\"captcha\",[required],Input, {})}\n            { error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\n\nexport default connect(mapStateToProps, {login} )(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\nconst sidebarReducer =(state = initialState, action)=>{\n    return state;\n}\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\nimport profileReducer from \"./profile-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport sidebarReducer from \"./sidebar-reduser\";\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunkMiddleware from \"redux-thunk\";\nimport  {reducer as formReducer} from \"redux-form\"\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    profilePage:profileReducer,\n    dialogsPage:dialogsReducer,\n    sidebar:sidebarReducer,\n    usersPage:usersReducer,\n    auth:authReducer,\n    form:formReducer,\n    app:appReducer,\n});\n// let store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\n\nexport default store;","import React from 'react';\nimport s from \"./News.module.css\";\nconst News = () => {\n    return <div className={s.news}>\n        <h2>News in the world</h2>\n        <img src=\"https://matzav.com/wp-content/uploads/2017/08/Wall-Street-Journal-696x607.jpg\" alt=\"\"/>\n        <p> Donald Trump</p>\n        <p> Wladimir Putin</p>\n    </div>\n}\n\nexport default News;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/preloader/preloader\";\nimport store from \"./redux/redux-store\";\n// import Settings from \"./components/Settings/Settings\";\n// import Music from \"./components/Music/Music\";\nimport News from \"./components/News/News\"\nimport {Switch} from \"react-router-dom\"\n\nconst Music = React.lazy(() => import(\"./components/Music/Music\"));\n// const News = React.lazy(()=>import(\"./components/News/News\"));\nconst Settings = React.lazy(() => import(\"./components/Settings/Settings\"));\n\n// const DialogsContainer = React.lazy(()=>import(\"./components/Dialogs/DialogsContainer\"));\n\nclass App extends Component {\n    catchAllUnhandledErrors = (promiseRejectionEvent)=>{\n        alert(\"some errors\");\n    }\n    componentDidMount() {\n        this.props.initializeApp();\n        window.addEventListener(\"unhandledrejection\",this.catchAllUnhandledErrors);\n    }\n    componentWillMount() {\n        window.removeEventListener(\"unhandledrejection\", this.catchAllUnhandledErrors);\n    }\n\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        }\n\n        return (\n            <div className='app-wrapper'>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className='app-wrapper-content'>\n                    <Switch>\n                    {/*<Route exact path='/'*/}\n                    {/*       render={() => <Redirect to={\"/profile\"}/> }/>*/}\n\n                    <Route path='/dialogs'\n                           render={() => <DialogsContainer/>}/>\n\n                    <Route path='/profile/:userId?'\n                           render={() => <ProfileContainer/>}/>\n\n                    <Route path='/users'\n                           render={() => <UsersContainer/>}/>\n\n                    {/*<Route  path='/login/hello'*/}\n                    {/*       render={() => <div>hello</div>}/>*/}\n\n                    <Route  path='/login'\n                           render={() => <LoginPage/>}/>\n\n\n\n                    <Route path='/news'\n                           render={() => {\n                               return <React.Suspense fallback={<div>loading...</div>}>\n                                   <News/>\n                               </React.Suspense>}}/>\n                    <Route path='/music'\n                           render={() => {\n                               return <React.Suspense fallback={<div>loading...</div>}>\n                                   <Music/>\n                               </React.Suspense>}}/>\n                    <Route path='/settings'\n                           render={() => {\n                               return <React.Suspense fallback={<div>loading...</div>}>\n                                   <Settings/>\n                               </React.Suspense>}}/>\n\n\n                    {/*<Route  path='*'*/}\n                    {/*       render={() => <div> 404</div>}/>*/}\n                    </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJsApp = (props) => {\n    return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\nexport default SamuraiJsApp;","import * as serviceWorker from './serviceWorker';\nimport appState, {subscribe} from \"./redux/state\"\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {BrowserRouter, Route} from \"react-router-dom\"\nimport store from \"./redux/redux-store\"\nimport {Provider} from \"react-redux\"\nimport SamuraiJsApp from \"./App\";\n\n    ReactDOM.render(<SamuraiJsApp/> ,document.getElementById('root'));\n\n\n\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__241wV\",\"error\":\"FormControls_error__32A8V\",\"formSummaryError\":\"FormControls_formSummaryError__1kErZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPhoto\":\"ProfileInfo_mainPhoto__28iYy\",\"contact\":\"ProfileInfo_contact__1MgRR\"};","module.exports = __webpack_public_path__ + \"static/media/user.83427d44.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__2QBnb\",\"users__img\":\"Users_users__img__2FJrN\",\"selected__page\":\"Users_selected__page__3Vun4\",\"login__block\":\"Users_login__block__3wS59\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Paginator_users__2tO5D\",\"users__img\":\"Paginator_users__img__38zW6\",\"selected__page\":\"Paginator_selected__page__1qBdK\",\"login__block\":\"Paginator_login__block__2JLhE\",\"paginator\":\"Paginator_paginator__2qn3p\",\"pageNumber\":\"Paginator_pageNumber__2G0Ml\",\"selectedPage\":\"Paginator_selectedPage__2j0hz\"};","module.exports = __webpack_public_path__ + \"static/media/circles.1181204b.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Header_img__1K-7w\",\"login__block\":\"Header_login__block__-_2wR\"};"],"sourceRoot":""}