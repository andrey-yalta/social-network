{"ast":null,"code":"import _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { auhAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\nimport { getDependsOnOwnProps } from \"react-redux/lib/connect/wrapMapToProps\";\nvar SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nvar initialState = {\n  initialized: false\n};\nexport var InitializeApp = function InitializeApp() {\n  return function (dispatch) {\n    debugger;\n    var promise = dispatch(getAuthUserData());\n    promise.then(function () {\n      debugger;\n      dispatch(setInitializedSuccess());\n    });\n  };\n};\nexport var appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\nexport var setInitializedSuccess = function setInitializedSuccess() {\n  return {\n    type: SET_INITIALIZED_SUCCESS\n  };\n}; // export default appReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/app-reducer.js"],"names":["auhAPI","stopSubmit","getAuthUserData","getDependsOnOwnProps","SET_INITIALIZED_SUCCESS","initialState","initialized","InitializeApp","dispatch","promise","then","setInitializedSuccess","appReducer","state","action","type"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AACA,SAAQC,oBAAR,QAAmC,wCAAnC;AAEA,IAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAC;AADG,CAAnB;AAKA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAa;AAC5C;AACA,QAAIC,OAAO,GAAGD,QAAQ,CAACN,eAAe,EAAhB,CAAtB;AACAO,IAAAA,OAAO,CAACC,IAAR,CAAa,YAAI;AACb;AACAF,MAAAA,QAAQ,CAACG,qBAAqB,EAAtB,CAAR;AACH,KAHD;AAKH,GAR4B;AAAA,CAAtB;AAUP,OAAO,IAAMC,UAAU,GAAE,SAAZA,UAAY,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBR,YAAuB;AAAA,MAATS,MAAS;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMX,uBAAN;AAEI,+BACWS,KADX;AAEIP,QAAAA,WAAW,EAAE;AAFjB;;AAOJ;AAAQ;AACJ,eAAOO,KAAP;AAAa;AAXrB;AAYE,CAbC;AAeP,OAAO,IAAMF,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAK;AACtC,SAAM;AAACI,IAAAA,IAAI,EAACX;AAAN,GAAN;AACH,CAFM,C,CAKP","sourcesContent":["import {auhAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\nimport {getDependsOnOwnProps} from \"react-redux/lib/connect/wrapMapToProps\";\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nlet initialState = {\n    initialized:false,\n\n};\n\nexport const InitializeApp = () => (dispatch) =>{\n    debugger;\n    let promise = dispatch(getAuthUserData());\n    promise.then(()=>{\n        debugger;\n        dispatch(setInitializedSuccess());\n    })\n\n}\n\nexport const appReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case  SET_INITIALIZED_SUCCESS:\n\n            return {\n                    ...state,\n                initialized: true,\n\n                }\n\n\n        default:{\n            return state}\n    }};\n\nexport const setInitializedSuccess = () =>{\n    return{type:SET_INITIALIZED_SUCCESS}\n}\n\n\n// export default appReducer;"]},"metadata":{},"sourceType":"module"}