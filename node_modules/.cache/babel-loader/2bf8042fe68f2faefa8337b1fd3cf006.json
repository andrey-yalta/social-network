{"ast":null,"code":"import _classCallCheck from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, getUsersThunkCreator, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingProgress, toggleIsFetching, unFollowText } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { usersAPI } from \"../../api/api\";\n\nvar UserAPIComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserAPIComponent, _React$Component);\n\n  function UserAPIComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserAPIComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserAPIComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (p) {\n      _this.props.getUsers(p, _this.props.pageSize); // this.props.setCurrentPage(p);\n      // this.props.toggleIsFetching(true);\n      //\n      // usersAPI.getUsers(p,this.props.pageSize).then(data =>{\n      //     this.props.setUsers( data.items)\n      //     this.props.toggleIsFetching(false);\n      //\n      // })\n\n    };\n\n    return _this;\n  }\n\n  _createClass(UserAPIComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n      this.props.getUsers(this.props.currentPage, this.props.pageSize); //\n      // this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n      //\n      // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n      //     this.props.toggleIsFetching(false);\n      //     this.props.setUsers( data.items)\n      //     this.props.setTotalUsersCount( data.totalCount)\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 38\n        }\n      }) : null, /*#__PURE__*/React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unFollowText,\n        toggleFollowingProgress: this.props.toggleFollowingProgress,\n        followingInProgress: this.props.followingInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return UserAPIComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingInProgress: state.usersPage.followingInProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unFollowText: unFollowText,\n  setUsers: setUsers,\n  toggleFollowingProgress: toggleFollowingProgress,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  toggleIsFetching: toggleIsFetching,\n  getUsers: getUsersThunkCreator\n})(UserAPIComponent);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js"],"names":["React","connect","follow","getUsersThunkCreator","setCurrentPage","setTotalUsersCount","setUsers","toggleFollowingProgress","toggleIsFetching","unFollowText","axios","Users","Preloader","usersAPI","UserAPIComponent","onPageChanged","p","props","getUsers","pageSize","currentPage","isFetching","totalUsersCount","users","followingInProgress","Component","mapStateToProps","state","usersPage"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EACYC,oBADZ,EAEIC,cAFJ,EAEoBC,kBAFpB,EAGIC,QAHJ,EAGcC,uBAHd,EAGuCC,gBAHvC,EAGyDC,YAHzD,QAIO,2BAJP;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;;IAIMC,gB;;;;;;;;;;;;;;;;UAaFC,a,GAAe,UAACC,CAAD,EAAM;AACjB,YAAKC,KAAL,CAAWC,QAAX,CAAoBF,CAApB,EAAsB,MAAKC,KAAL,CAAWE,QAAjC,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH,K;;;;;;;wCAtBmB;AAAC;AACjB,WAAKF,KAAL,CAAWC,QAAX,CAAoB,KAAKD,KAAL,CAAWG,WAA/B,EAA2C,KAAKH,KAAL,CAAWE,QAAtD,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;6BAcQ;AAEL,0BAAO,0CACF,KAAKF,KAAL,CAAWI,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKJ,KAAL,CAAWK,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWE,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKF,KAAL,CAAWG,WAF/B;AAGO,QAAA,aAAa,EAAE,KAAKL,aAH3B;AAIO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWM,KAJzB;AAKO,QAAA,MAAM,EAAE,KAAKN,KAAL,CAAWf,MAL1B;AAMO,QAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWR,YAN5B;AAOO,QAAA,uBAAuB,EAAG,KAAKQ,KAAL,CAAWV,uBAP5C;AAQO,QAAA,mBAAmB,EAAG,KAAKU,KAAL,CAAWO,mBARxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,CAAP;AAaH;;;;EAzC0BxB,KAAK,CAACyB,S;;AAiDrC,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC7B,SAAM;AACFJ,IAAAA,KAAK,EAACI,KAAK,CAACC,SAAN,CAAgBL,KADpB;AAEFJ,IAAAA,QAAQ,EAACQ,KAAK,CAACC,SAAN,CAAgBT,QAFvB;AAGFG,IAAAA,eAAe,EAACK,KAAK,CAACC,SAAN,CAAgBN,eAH9B;AAIFF,IAAAA,WAAW,EAACO,KAAK,CAACC,SAAN,CAAgBR,WAJ1B;AAKFC,IAAAA,UAAU,EAAEM,KAAK,CAACC,SAAN,CAAgBP,UAL1B;AAMFG,IAAAA,mBAAmB,EAAEG,KAAK,CAACC,SAAN,CAAgBJ;AANnC,GAAN;AASH,CAVD;;AAYA,eAAevB,OAAO,CAACyB,eAAD,EAClB;AAACxB,EAAAA,MAAM,EAANA,MAAD;AAAQO,EAAAA,YAAY,EAAZA,YAAR;AAAsBH,EAAAA,QAAQ,EAARA,QAAtB;AACIC,EAAAA,uBAAuB,EAAvBA,uBADJ;AAC6BH,EAAAA,cAAc,EAAdA,cAD7B;AAC6CC,EAAAA,kBAAkB,EAAlBA,kBAD7C;AAEIG,EAAAA,gBAAgB,EAAhBA,gBAFJ;AAEsBU,EAAAA,QAAQ,EAAEf;AAFhC,CADkB,CAAP,CAG6CW,gBAH7C,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, getUsersThunkCreator,\n    setCurrentPage, setTotalUsersCount,\n    setUsers, toggleFollowingProgress, toggleIsFetching, unFollowText,\n} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport {usersAPI} from \"../../api/api\";\n\n\n\nclass UserAPIComponent extends React.Component{\n\n    componentDidMount() {//данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n        this.props.getUsers(this.props.currentPage,this.props.pageSize);\n        //\n        // this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n        //\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers( data.items)\n        //     this.props.setTotalUsersCount( data.totalCount)\n        // })\n    }\n    onPageChanged =(p) =>{\n        this.props.getUsers(p,this.props.pageSize);\n        // this.props.setCurrentPage(p);\n        // this.props.toggleIsFetching(true);\n        //\n        // usersAPI.getUsers(p,this.props.pageSize).then(data =>{\n        //     this.props.setUsers( data.items)\n        //     this.props.toggleIsFetching(false);\n        //\n        // })\n\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unFollowText}\n                   toggleFollowingProgress ={this.props.toggleFollowingProgress}\n                   followingInProgress ={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\n\n\n\n\n\nlet mapStateToProps = (state) => {\n    return{\n        users:state.usersPage.users,\n        pageSize:state.usersPage.pageSize,\n        totalUsersCount:state.usersPage.totalUsersCount,\n        currentPage:state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingInProgress: state.usersPage.followingInProgress,\n\n    }\n}\n\nexport default connect(mapStateToProps,\n    {follow,unFollowText, setUsers,\n        toggleFollowingProgress, setCurrentPage, setTotalUsersCount,\n        toggleIsFetching, getUsers: getUsersThunkCreator})( UserAPIComponent);"]},"metadata":{},"sourceType":"module"}