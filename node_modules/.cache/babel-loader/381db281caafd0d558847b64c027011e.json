{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Login/Login.js\";\n\nimport React from 'react';\nimport { Field, reduxForm } from \"redux-form\";\nimport { Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport { connect } from \"react-redux\";\nimport { login } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormControls.module.css\";\nimport { createField } from \"../common/FormsControls/FormsControls\";\n\nvar LoginForm = function LoginForm(_ref) {\n  var handleSubmit = _ref.handleSubmit,\n      error = _ref.error,\n      captchaUrl = _ref.captchaUrl;\n  return /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, createField(\"Email\", \"email\", [required], Input, {\n    type: \"email\"\n  }), createField(\"Password\", \"password\", [required], Input, {\n    type: \"password\"\n  }), createField(null, \"rememberMe\", [], Input, {\n    type: \"checkbox\"\n  }, \"remember me\"), captchaUrl && /*#__PURE__*/React.createElement(\"img\", {\n    src: captchaUrl,\n    alt: \"captcha\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 29\n    }\n  }), captchaUrl && createField(\"Symmbols from image\", \"captcha\", [required], Input, {}), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: style.formSummaryError,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 17\n    }\n  }, \"Login\")));\n};\n\nvar LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nvar Login = function Login(props) {\n  var onSubmit = function onSubmit(formData) {\n    props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/profile\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, \"Login\"), /*#__PURE__*/React.createElement(LoginReduxForm, {\n    onSubmit: onSubmit,\n    captchaUrl: props.captchaUrl,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default connect(mapStateToProps, {\n  login: login\n})(Login);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Login/Login.js"],"names":["React","Field","reduxForm","Input","required","connect","login","Redirect","style","createField","LoginForm","handleSubmit","error","captchaUrl","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","email","password","rememberMe","captcha","isAuth","mapStateToProps","state","auth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormControls.module.css\"\nimport {createField} from \"../common/FormsControls/FormsControls\";\nconst LoginForm = ({handleSubmit,error, captchaUrl}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {/*<div>*/}\n            {/*    <Field placeholder={\"Email\"} name={\"email\"}*/}\n            {/*           validate={[required]}*/}\n            {/*           component={Input}/>*/}\n            {/*</div>*/}\n\n                {createField(\"Email\",\"email\",[required],Input, {type:\"email\"})}\n                {createField(\"Password\",\"password\",[required],Input, {type:\"password\"})}\n                {createField(null,\"rememberMe\",[],Input, {type:\"checkbox\"}, \"remember me\")}\n                {/*<Field placeholder={\"Password\"} name={\"password\"} type={\"password\"}*/}\n                {/*       validate={[required]}*/}\n                {/*       component={Input}/>*/}\n\n            {/*<div>*/}\n            {/*    <Field component={Input} name={\"rememberMe\"} type={\"checkbox\"}/> remember me*/}\n            {/*</div>*/}\n            { captchaUrl && <img src={captchaUrl} alt=\"captcha\"/> }\n            { captchaUrl && createField(\"Symmbols from image\",\"captcha\",[required],Input, {})}\n            { error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm =  reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"} />\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl} />\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    captchaUrl: state.auth.captchaUrl,\n    isAuth: state.auth.isAuth\n})\n\n\nexport default connect(mapStateToProps, {login} )(Login);"]},"metadata":{},"sourceType":"module"}