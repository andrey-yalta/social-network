{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nvar ADD_POST = \"ADD-POST\";\nvar SET_USER_PROFILE = \"SET_USER_PROFILE\";\nvar SET_STATUS = \"SET_STATUS\";\nvar SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\nvar initialState = {\n  postsData: [{\n    id: 1,\n    text: \"Hello\",\n    like: 12\n  }, {\n    id: 2,\n    text: \"How are you, man?\",\n    like: 11\n  }, {\n    id: 3,\n    text: \"What interestind in your life?\",\n    like: 1\n  }, {\n    id: 4,\n    text: \"I'm glad to hear you!\",\n    like: 5\n  }],\n  profile: null,\n  status: \"\"\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 5,\n          text: action.newPostText,\n          like: 0\n        };\n\n        var newState = _objectSpread({}, state, {\n          postsData: _toConsumableArray(state.postsData)\n        }); //поверхностная и глубокая копия\n\n\n        newState.postsData.push(newPost);\n        newState.newPostText = \"\";\n        return newState;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    case SAVE_PHOTO_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          profile: _objectSpread({}, state.profile, {\n            photos: action.photos\n          })\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var addPostActionCreator = function addPostActionCreator(newPostText) {\n  return {\n    type: \"ADD-POST\",\n    newPostText: newPostText\n  };\n};\nexport var setUserProfile = function setUserProfile(profile) {\n  return {\n    type: \"SET_USER_PROFILE\",\n    profile: profile\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: \"SET_STATUS\",\n    status: status\n  };\n};\nexport var savePhotoSuccess = function savePhotoSuccess(photos) {\n  return {\n    type: \"SAVE_PHOTO_SUCCESS\",\n    photos: photos\n  };\n};\nexport var getUserProfile = function getUserProfile(userId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return usersAPI.getProfile(userId);\n\n            case 2:\n              response = _context.sent;\n              dispatch(setUserProfile(response.data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getStatus = function getStatus(userId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return profileAPI.getStatus(userId);\n\n            case 2:\n              response = _context2.sent;\n              dispatch(setStatus(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateStatus = function updateStatus(status) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return profileAPI.updateStatus(status);\n\n            case 2:\n              response = _context3.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var savePhoto = function savePhoto(file) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return profileAPI.savePhoto(file);\n\n            case 2:\n              response = _context4.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(savePhotoSuccess(response.data.data.photos));\n              }\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\nexport var saveProfile = function saveProfile(profile) {\n  return /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(dispatch, getState) {\n      var userId, response;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              userId = getState().auth.userId;\n              _context5.next = 3;\n              return profileAPI.saveProfile(profile);\n\n            case 3:\n              response = _context5.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(getUserProfile(userId));\n              } else {\n                dispatch(stopSubmit(\"login\", {\n                  _error: response.data.messages[0]\n                }));\n              }\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","stopSubmit","ADD_POST","SET_USER_PROFILE","SET_STATUS","SAVE_PHOTO_SUCCESS","initialState","postsData","id","text","like","profile","status","profileReducer","state","action","type","newPost","newPostText","newState","push","photos","addPostActionCreator","setUserProfile","setStatus","savePhotoSuccess","getUserProfile","userId","dispatch","getProfile","response","data","getStatus","updateStatus","resultCode","savePhoto","file","saveProfile","getState","auth","_error","messages"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\nconst SAVE_PHOTO_SUCCESS = \"SAVE_PHOTO_SUCCESS\";\n\nlet initialState = {\n    postsData: [\n        {id: 1, text: \"Hello\", like: 12},\n        {id: 2, text: \"How are you, man?\", like: 11},\n        {id: 3, text: \"What interestind in your life?\", like: 1},\n        {id: 4, text: \"I'm glad to hear you!\", like: 5}],\n    profile: null,\n    status: \"\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST: {\n            let newPost = {\n                id: 5, text: action.newPostText, like: 0\n            };\n            let newState = {...state, postsData: [...state.postsData]}; //поверхностная и глубокая копия\n            newState.postsData.push(newPost);\n            newState.newPostText = \"\";\n            return newState\n        }\n        case SET_USER_PROFILE: {\n            return {...state, profile: action.profile};\n        }\n        case SET_STATUS: {\n            return {...state, status: action.status};\n        }\n        case SAVE_PHOTO_SUCCESS: {\n            return {...state, profile: {...state.profile, photos:action.photos}};\n        }\n        default: {\n            return state\n        }\n    }\n};\n\nexport const addPostActionCreator = (newPostText) => {\n    return {type: \"ADD-POST\", newPostText}\n};\nexport const setUserProfile = (profile) => {\n    return {type: \"SET_USER_PROFILE\", profile};\n};\nexport const setStatus = (status) => {\n    return {type: \"SET_STATUS\", status};\n};\nexport const savePhotoSuccess = (photos) => {\n    return {type: \"SAVE_PHOTO_SUCCESS\", photos};\n};\n\nexport const getUserProfile = (userId) => async (dispatch) => {\n    let response = await usersAPI.getProfile(userId)\n    dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId) => async (dispatch) => {\n    let response = await profileAPI.getStatus(userId)\n    dispatch(setStatus(response.data))\n};\nexport const updateStatus = (status) => async (dispatch) => {\n    let response = await profileAPI.updateStatus(status)\n    if (response.data.resultCode === 0) {\n        dispatch(setStatus(status))\n    }\n};\nexport const savePhoto = (file)=> async(dispatch) =>{\n    let response = await profileAPI.savePhoto(file)\n    if (response.data.resultCode ===0){\n        dispatch(savePhotoSuccess(response.data.data.photos) )\n    }\n};\n\nexport const saveProfile = (profile)=> async(dispatch, getState) =>{\n    const userId = getState().auth.userId;\n    const response = await profileAPI.saveProfile(profile)\n    if (response.data.resultCode ===0){\n        dispatch(getUserProfile(userId) )\n    }\n    else{\n        dispatch(stopSubmit(\"login\", {_error: response.data.messages[0]}));\n    }\n\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}