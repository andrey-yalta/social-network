{"ast":null,"code":"import _defineProperty from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/common/Paginator/Paginator.js\";\n\n// import React, {useState} from 'react';\n// import s from \"./Paginator.module.css\";\n//\n// let Paginator = ({currentPage, totalItemsCount,pageSize,onPageChanged, portionSize = 10}) => {\n//\n//     let pagesCount = Math.ceil(totalItemsCount / pageSize);\n//\n//\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i)\n//     }\n//\n//     return <div>\n//             {pages.map(p => {\n//                     return (\n//                         <span className={currentPage === p && s.selected__page}\n//                               onClick={(e) => {\n//                                   onPageChanged(p)\n//                               }}> {p}</span>\n//                     )\n//             })}\n//         </div>\n// }\n//\n// export default Paginator;\nimport React, { useState } from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nvar Paginator = function Paginator(_ref) {\n  var totalItemsCount = _ref.totalItemsCount,\n      pageSize = _ref.pageSize,\n      currentPage = _ref.currentPage,\n      onPageChanged = _ref.onPageChanged,\n      _ref$portionSize = _ref.portionSize,\n      portionSize = _ref$portionSize === void 0 ? 10 : _ref$portionSize;\n  var pagesCount = Math.ceil(totalItemsCount / pageSize);\n  var pages = [];\n\n  for (var i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  var portionCount = Math.ceil(pagesCount / portionSize);\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  var leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  var rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.paginator,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"PREV\"), pages.filter(function (p) {\n    return p >= leftPortionPageNumber && p <= rightPortionPageNumber;\n  }).map(function (p) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: cn(_defineProperty({}, styles.selectedPage, currentPage === p), styles.pageNumber),\n      key: p,\n      onClick: function onClick(e) {\n        onPageChanged(p);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 24\n      }\n    }, p);\n  }), portionCount > portionNumber && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setPortionNumber(portionNumber + 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, \"NEXT\"));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/common/Paginator/Paginator.js"],"names":["React","useState","styles","cn","Paginator","totalItemsCount","pageSize","currentPage","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","filter","p","map","selectedPage","pageNumber","e"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,EAAP,MAAe,YAAf;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,OAA+E;AAAA,MAA7EC,eAA6E,QAA7EA,eAA6E;AAAA,MAA5DC,QAA4D,QAA5DA,QAA4D;AAAA,MAAlDC,WAAkD,QAAlDA,WAAkD;AAAA,MAArCC,aAAqC,QAArCA,aAAqC;AAAA,8BAAtBC,WAAsB;AAAA,MAAtBA,WAAsB,iCAAR,EAAQ;AAE3F,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUP,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIO,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAGD,WAAvB,CAAnB;;AAT2F,kBAUnDR,QAAQ,CAAC,CAAD,CAV2C;AAAA;AAAA,MAUtFgB,aAVsF;AAAA,MAUvEC,gBAVuE;;AAW3F,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAsBR,WAAtB,GAAoC,CAAhE;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAO;AAAK,IAAA,SAAS,EAAEP,MAAM,CAACmB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACDJ,aAAa,GAAG,CAAhB,iBACF;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFG,EAIFJ,KAAK,CACDS,MADJ,CACW,UAAAC,CAAC;AAAA,WAAIA,CAAC,IAAIJ,qBAAL,IAA8BI,CAAC,IAAEH,sBAArC;AAAA,GADZ,EAEII,GAFJ,CAEQ,UAACD,CAAD,EAAO;AACR,wBAAO;AAAM,MAAA,SAAS,EAAGpB,EAAE,qBACtBD,MAAM,CAACuB,YADe,EACAlB,WAAW,KAAKgB,CADhB,GAExBrB,MAAM,CAACwB,UAFiB,CAApB;AAGM,MAAA,GAAG,EAAEH,CAHX;AAIM,MAAA,OAAO,EAAE,iBAACI,CAAD,EAAO;AACZnB,QAAAA,aAAa,CAACe,CAAD,CAAb;AACH,OANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMUA,CANV,CAAP;AAOH,GAVJ,CAJE,EAeDP,YAAY,GAAGC,aAAf,iBACF;AAAQ,IAAA,OAAO,EAAE,mBAAM;AAAEC,MAAAA,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;AAAqC,KAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBG,CAAP;AAoBH,CAnCD;;AAqCA,eAAeb,SAAf","sourcesContent":["// import React, {useState} from 'react';\n// import s from \"./Paginator.module.css\";\n//\n// let Paginator = ({currentPage, totalItemsCount,pageSize,onPageChanged, portionSize = 10}) => {\n//\n//     let pagesCount = Math.ceil(totalItemsCount / pageSize);\n//\n//\n//     let pages = [];\n//     for (let i = 1; i <= pagesCount; i++) {\n//         pages.push(i)\n//     }\n//\n//     return <div>\n//             {pages.map(p => {\n//                     return (\n//                         <span className={currentPage === p && s.selected__page}\n//                               onClick={(e) => {\n//                                   onPageChanged(p)\n//                               }}> {p}</span>\n//                     )\n//             })}\n//         </div>\n// }\n//\n// export default Paginator;\nimport React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n        {pages\n            .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n            .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n        <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}