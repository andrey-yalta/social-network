{"ast":null,"code":"import _classCallCheck from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, getUsers, getUsersThunkCreator, setCurrentPage, setTotalUsersCount, setUsers, toggleFollowingProgress, toggleIsFetching, unFollow } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport { usersAPI } from \"../../api/api\";\nimport { getCurrentPage, getFollowingInProgress, getIsFetching, getPageSize, getTotalUsersCount, getUsersState } from \"../../redux/users-selectors\";\n\nvar UserAPIComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserAPIComponent, _React$Component);\n\n  function UserAPIComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserAPIComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserAPIComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (p) {\n      _this.props.getUsers(p, _this.props.pageSize); // this.props.setCurrentPage(p);\n      // this.props.toggleIsFetching(true);\n      //\n      // usersAPI.getUsers(p,this.props.pageSize).then(data =>{\n      //     this.props.setUsers( data.items)\n      //     this.props.toggleIsFetching(false);\n      //\n      // })\n\n    };\n\n    return _this;\n  }\n\n  _createClass(UserAPIComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      //данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n      this.props.getUsers(this.props.currentPage, this.props.pageSize); //\n      // this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n      //\n      // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n      //     this.props.toggleIsFetching(false);\n      //     this.props.setUsers( data.items)\n      //     this.props.setTotalUsersCount( data.totalCount)\n      // })\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 38\n        }\n      }) : null, /*#__PURE__*/React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unFollow,\n        toggleFollowingProgress: this.props.toggleFollowingProgress,\n        followingInProgress: this.props.followingInProgress,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return UserAPIComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: getUsersState(state),\n    pageSize: getPageSize(state),\n    totalUsersCount: getTotalUsersCount(state),\n    currentPage: getCurrentPage(state),\n    isFetching: getIsFetching(state),\n    followingInProgress: getFollowingInProgress(state)\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unFollow: unFollow,\n  toggleFollowingProgress: toggleFollowingProgress,\n  setCurrentPage: setCurrentPage,\n  getUsers: getUsers\n})(UserAPIComponent);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js"],"names":["React","connect","follow","getUsers","getUsersThunkCreator","setCurrentPage","setTotalUsersCount","setUsers","toggleFollowingProgress","toggleIsFetching","unFollow","axios","Users","Preloader","usersAPI","getCurrentPage","getFollowingInProgress","getIsFetching","getPageSize","getTotalUsersCount","getUsersState","UserAPIComponent","onPageChanged","p","props","pageSize","currentPage","isFetching","totalUsersCount","users","followingInProgress","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EACYC,QADZ,EACsBC,oBADtB,EAEIC,cAFJ,EAEoBC,kBAFpB,EAGIC,QAHJ,EAGcC,uBAHd,EAGuCC,gBAHvC,EAGyDC,QAHzD,QAIO,2BAJP;AAKA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SACIC,cADJ,EACoBC,sBADpB,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,kBAJJ,EAKIC,aALJ,QAMO,6BANP;;IAUMC,gB;;;;;;;;;;;;;;;;UAaFC,a,GAAe,UAACC,CAAD,EAAM;AACjB,YAAKC,KAAL,CAAWrB,QAAX,CAAoBoB,CAApB,EAAsB,MAAKC,KAAL,CAAWC,QAAjC,EADiB,CAEjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEH,K;;;;;;;wCAtBmB;AAAC;AACjB,WAAKD,KAAL,CAAWrB,QAAX,CAAoB,KAAKqB,KAAL,CAAWE,WAA/B,EAA2C,KAAKF,KAAL,CAAWC,QAAtD,EADgB,CAEhB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;6BAcQ;AAEL,0BAAO,0CACF,KAAKD,KAAL,CAAWG,UAAX,gBAAwB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAxB,GAAuC,IADrC,eAEH,oBAAC,KAAD;AAAO,QAAA,eAAe,EAAE,KAAKH,KAAL,CAAWI,eAAnC;AACO,QAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,QAD5B;AAEO,QAAA,WAAW,EAAE,KAAKD,KAAL,CAAWE,WAF/B;AAGO,QAAA,aAAa,EAAE,KAAKJ,aAH3B;AAIO,QAAA,KAAK,EAAE,KAAKE,KAAL,CAAWK,KAJzB;AAKO,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWtB,MAL1B;AAMO,QAAA,QAAQ,EAAE,KAAKsB,KAAL,CAAWd,QAN5B;AAOO,QAAA,uBAAuB,EAAG,KAAKc,KAAL,CAAWhB,uBAP5C;AAQO,QAAA,mBAAmB,EAAG,KAAKgB,KAAL,CAAWM,mBARxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFG,CAAP;AAaH;;;;EAzC0B9B,KAAK,CAAC+B,S;;AA4CrC,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC7B,SAAM;AACFJ,IAAAA,KAAK,EAACT,aAAa,CAACa,KAAD,CADjB;AAEFR,IAAAA,QAAQ,EAACP,WAAW,CAACe,KAAD,CAFlB;AAGFL,IAAAA,eAAe,EAACT,kBAAkB,CAACc,KAAD,CAHhC;AAIFP,IAAAA,WAAW,EAACX,cAAc,CAACkB,KAAD,CAJxB;AAKFN,IAAAA,UAAU,EAAEV,aAAa,CAACgB,KAAD,CALvB;AAMFH,IAAAA,mBAAmB,EAAEd,sBAAsB,CAACiB,KAAD;AANzC,GAAN;AAQH,CATD;;AAWA,eAAehC,OAAO,CAAC+B,eAAD,EAClB;AAAC9B,EAAAA,MAAM,EAANA,MAAD;AAAQQ,EAAAA,QAAQ,EAARA,QAAR;AACIF,EAAAA,uBAAuB,EAAvBA,uBADJ;AAC6BH,EAAAA,cAAc,EAAdA,cAD7B;AAEKF,EAAAA,QAAQ,EAARA;AAFL,CADkB,CAAP,CAGMkB,gBAHN,CAAf","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow, getUsers, getUsersThunkCreator,\n    setCurrentPage, setTotalUsersCount,\n    setUsers, toggleFollowingProgress, toggleIsFetching, unFollow,\n} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport {usersAPI} from \"../../api/api\";\nimport {\n    getCurrentPage, getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount,\n    getUsersState\n} from \"../../redux/users-selectors\";\n\n\n\nclass UserAPIComponent extends React.Component{\n\n    componentDidMount() {//данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n        this.props.getUsers(this.props.currentPage,this.props.pageSize);\n        //\n        // this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n        //\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n        //     this.props.toggleIsFetching(false);\n        //     this.props.setUsers( data.items)\n        //     this.props.setTotalUsersCount( data.totalCount)\n        // })\n    }\n    onPageChanged =(p) =>{\n        this.props.getUsers(p,this.props.pageSize);\n        // this.props.setCurrentPage(p);\n        // this.props.toggleIsFetching(true);\n        //\n        // usersAPI.getUsers(p,this.props.pageSize).then(data =>{\n        //     this.props.setUsers( data.items)\n        //     this.props.toggleIsFetching(false);\n        //\n        // })\n\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unFollow}\n                   toggleFollowingProgress ={this.props.toggleFollowingProgress}\n                   followingInProgress ={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return{\n        users:getUsersState(state),\n        pageSize:getPageSize(state),\n        totalUsersCount:getTotalUsersCount(state),\n        currentPage:getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state),\n    }\n}\n\nexport default connect(mapStateToProps,\n    {follow,unFollow,\n        toggleFollowingProgress, setCurrentPage,\n         getUsers})( UserAPIComponent);"]},"metadata":{},"sourceType":"module"}