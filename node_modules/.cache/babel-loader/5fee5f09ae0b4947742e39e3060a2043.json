{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nvar SET_USER_DATA = 'SET_USER_DATA';\nvar initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport var setAuthUserData = function setAuthUserData(userId, email, login, isAuth) {\n  return {\n    type: SET_USER_DATA,\n    payload: {\n      userId: userId,\n      email: email,\n      login: login,\n      isAuth: isAuth\n    }\n  };\n};\nexport var getAuthUserData = function getAuthUserData() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, _response$data$data, id, _login, email;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return authAPI.me();\n\n            case 2:\n              response = _context.sent;\n\n              if (response.data.resultCode === 0) {\n                _response$data$data = response.data.data, id = _response$data$data.id, _login = _response$data$data.login, email = _response$data$data.email;\n                dispatch(setAuthUserData(id, email, _login, true));\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var login = function login(email, password, rememberMe) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response, message;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return authAPI.login(email, password, rememberMe);\n\n            case 2:\n              response = _context2.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData());\n              } else {\n                message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {\n                  _error: message\n                }));\n              }\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    authAPI.logout().then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/auth-reducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","response","data","resultCode","id","password","rememberMe","message","messages","length","_error","logout","then"],"mappings":"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","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}  });\n\nexport const getAuthUserData = () => async (dispatch) => {\n      let response = await authAPI.me()\n\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n\n}\n\nexport const login = (email, password, rememberMe) => async(dispatch) => {\n\n     let response = await authAPI.login(email, password, rememberMe);\n\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n\n            }\n\n}\n\nexport const logout = () => (dispatch) => {\n    authAPI.logout()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n        });\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}