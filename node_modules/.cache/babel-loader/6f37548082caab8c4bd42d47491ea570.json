{"ast":null,"code":"import _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nvar SET_USER_DATA = 'SET_USER_DATA';\nvar initialState = {\n  userId: null,\n  email: null,\n  login: null,\n  isAuth: false\n};\n\nvar authReducer = function authReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_USER_DATA:\n      return _objectSpread({}, state, action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport var setAuthUserData = function setAuthUserData(userId, email, login, isAuth) {\n  return {\n    type: SET_USER_DATA,\n    payload: {\n      userId: userId,\n      email: email,\n      login: login,\n      isAuth: isAuth\n    }\n  };\n};\nexport var getAuthUserData = function getAuthUserData() {\n  return function (dispatch) {\n    return authAPI.me().then(function (response) {\n      if (response.data.resultCode === 0) {\n        var _response$data$data = response.data.data,\n            id = _response$data$data.id,\n            _login = _response$data$data.login,\n            email = _response$data$data.email;\n        dispatch(setAuthUserData(id, email, _login, true));\n      }\n    });\n  };\n};\nexport var login = function login(email, password, rememberMe) {\n  return function (dispatch) {\n    authAPI.login(email, password, rememberMe).then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      } else {\n        var message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {\n          _error: message\n        }));\n      }\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    authAPI.logout().then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/auth-reducer.js"],"names":["authAPI","stopSubmit","SET_USER_DATA","initialState","userId","email","login","isAuth","authReducer","state","action","type","payload","setAuthUserData","getAuthUserData","dispatch","me","then","response","data","resultCode","id","password","rememberMe","message","messages","length","_error","logout"],"mappings":"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","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'SET_USER_DATA';\n\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}  });\n\nexport const getAuthUserData = () => (dispatch) => {\n    return authAPI.me()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                let {id, login, email} = response.data.data;\n                dispatch(setAuthUserData(id, email, login, true));\n            }\n        });\n}\n\nexport const login = (email, password, rememberMe) => (dispatch) => {\n\n    authAPI.login(email, password, rememberMe)\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(getAuthUserData())\n            } else {\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n                dispatch(stopSubmit(\"login\", {_error: message}));\n\n            }\n        });\n}\n\nexport const logout = () => (dispatch) => {\n    authAPI.logout()\n        .then(response => {\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n        });\n}\n\nexport default authReducer;"]},"metadata":{},"sourceType":"module"}