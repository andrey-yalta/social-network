{"ast":null,"code":"import _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { auhAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\nvar SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nvar initialState = {\n  initialized: false\n};\n\nvar appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case SET_INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var setInitializedSuccess = function setInitializedSuccess() {\n  return {\n    type: SET_INITIALIZED_SUCCESS\n  };\n};\nexport var InitializeApp = function InitializeApp() {\n  return function (dispatch) {\n    var promise = dispatch(getAuthUserData());\n    promise.all.then(function () {\n      dispatch(setInitializedSuccess());\n    });\n  };\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/app-reducer.js"],"names":["auhAPI","stopSubmit","getAuthUserData","SET_INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","setInitializedSuccess","InitializeApp","dispatch","promise","all","then"],"mappings":";AAAA,SAAQA,MAAR,QAAqB,YAArB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AAEA,IAAMC,uBAAuB,GAAG,yBAAhC;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAC;AADG,CAAnB;;AAIA,IAAMC,UAAU,GAAE,SAAZA,UAAY,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBH,YAAuB;AAAA,MAATI,MAAS;;AAC9C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAMN,uBAAN;AAEI,+BACWI,KADX;AAEIF,QAAAA,WAAW,EAAE;AAFjB;;AAOJ;AAAQ;AACJ,eAAOE,KAAP;AAAa;AAXrB;AAYE,CAbN;;AAeA,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAK;AACtC,SAAM;AAACD,IAAAA,IAAI,EAACN;AAAN,GAAN;AACH,CAFM;AAGP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAa;AAC5C,QAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ,CAAiB,YAAI;AACjBH,MAAAA,QAAQ,CAACF,qBAAqB,EAAtB,CAAR;AACH,KAFD;AAIH,GAN4B;AAAA,CAAtB;AASP,eAAeJ,UAAf","sourcesContent":["import {auhAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst SET_INITIALIZED_SUCCESS = 'SET_INITIALIZED_SUCCESS';\nlet initialState = {\n    initialized:false,\n\n};\nconst appReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case  SET_INITIALIZED_SUCCESS:\n\n            return {\n                    ...state,\n                initialized: true,\n\n                }\n\n\n        default:{\n            return state}\n    }};\n\nexport const setInitializedSuccess = () =>{\n    return{type:SET_INITIALIZED_SUCCESS}\n}\nexport const InitializeApp = () => (dispatch) =>{\n    let promise = dispatch(getAuthUserData());\n    promise.all.then(()=>{\n        dispatch(setInitializedSuccess());\n    })\n\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}