{"ast":null,"code":"import _classCallCheck from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Profile/ProfileContainer.jsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getUserProfile, savePhoto, saveProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\n\nvar ProfileContainer = /*#__PURE__*/function (_React$Component) {\n  _inherits(ProfileContainer, _React$Component);\n\n  function ProfileContainer() {\n    _classCallCheck(this, ProfileContainer);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(ProfileContainer).apply(this, arguments));\n  }\n\n  _createClass(ProfileContainer, [{\n    key: \"refreshProfile\",\n    value: function refreshProfile() {\n      var userId = this.props.match.params.userId;\n\n      if (!userId) {\n        userId = this.props.authorizedUserId;\n\n        if (!userId) {\n          this.props.history.push(\"/login\");\n        }\n      }\n\n      this.props.getUserProfile(userId);\n      this.props.getStatus(userId);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshProfile();\n    } //ДОРАБОТАТЬ !!!!\n    // componentDidUpdate(prevProps, prevState, snapshot) {\n    //     if(this.props.match.params.userId !== prevState.match.params.userId)\n    //     this.refreshProfile()\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      // console.log(\"RENDER PROFILE\");\n      return /*#__PURE__*/React.createElement(Profile, Object.assign({}, this.props, {\n        isOwner: !this.props.match.params.userId,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateStatus: this.props.updateStatus,\n        savePhoto: this.props.savePhoto,\n        saveProfile: this.props.saveProfile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return ProfileContainer;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  //console.log('mapStateToProps PROFILE')\n  return {\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    authorizedUserId: state.auth.userId,\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfile: getUserProfile,\n  getStatus: getStatus,\n  updateStatus: updateStatus,\n  savePhoto: savePhoto,\n  saveProfile: saveProfile\n}), withRouter)(ProfileContainer);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Profile/ProfileContainer.jsx"],"names":["React","Profile","connect","getStatus","getUserProfile","savePhoto","saveProfile","updateStatus","withRouter","compose","ProfileContainer","userId","props","match","params","authorizedUserId","history","push","refreshProfile","profile","status","Component","mapStateToProps","state","profilePage","auth","isAuth"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,cAAnB,EAAmCC,SAAnC,EAA8CC,WAA9C,EAA2DC,YAA3D,QAA8E,6BAA9E;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,OAAR,QAAsB,OAAtB;;IAEMC,gB;;;;;;;;;;;qCAEc;AACZ,UAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,UAAI,CAACA,MAAL,EAAa;AACTA,QAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,gBAApB;;AACA,YAAI,CAACJ,MAAL,EAAa;AACT,eAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,WAAKL,KAAL,CAAWR,cAAX,CAA0BO,MAA1B;AACA,WAAKC,KAAL,CAAWT,SAAX,CAAqBQ,MAArB;AAEH;;;wCAEmB;AAEhB,WAAKO,cAAL;AACH,K,CAED;AACA;AACA;AACA;AACA;;;;6BAES;AACL;AACA,0BACI,oBAAC,OAAD,oBAAa,KAAKN,KAAlB;AACS,QAAA,OAAO,EAAI,CAAC,KAAKA,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAD7C;AAES,QAAA,OAAO,EAAE,KAAKC,KAAL,CAAWO,OAF7B;AAGS,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAH5B;AAIS,QAAA,YAAY,EAAE,KAAKR,KAAL,CAAWL,YAJlC;AAKS,QAAA,SAAS,EAAG,KAAKK,KAAL,CAAWP,SALhC;AAMS,QAAA,WAAW,EAAE,KAAKO,KAAL,CAAWN,WANjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAWH;;;;EAvC0BN,KAAK,CAACqB,S;;AA0CrC,IAAIC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AAC7B;AACA,SAAQ;AACJJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,WAAN,CAAkBL,OADvB;AAEJC,IAAAA,MAAM,EAAEG,KAAK,CAACC,WAAN,CAAkBJ,MAFtB;AAGJL,IAAAA,gBAAgB,EAAEQ,KAAK,CAACE,IAAN,CAAWd,MAHzB;AAIJe,IAAAA,MAAM,EAAEH,KAAK,CAACE,IAAN,CAAWC;AAJf,GAAR;AAOH,CATD;;AAWA,eAAejB,OAAO,CAClBP,OAAO,CAACoB,eAAD,EAAkB;AAAClB,EAAAA,cAAc,EAAdA,cAAD;AAAiBD,EAAAA,SAAS,EAATA,SAAjB;AAA4BI,EAAAA,YAAY,EAAZA,YAA5B;AAA0CF,EAAAA,SAAS,EAATA,SAA1C;AAAqDC,EAAAA,WAAW,EAAXA;AAArD,CAAlB,CADW,EAElBE,UAFkB,CAAP,CAGbE,gBAHa,CAAf","sourcesContent":["import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile(){\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        this.refreshProfile()\r\n    }\r\n\r\n    //ДОРАБОТАТЬ !!!!\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     if(this.props.match.params.userId !== prevState.match.params.userId)\r\n    //     this.refreshProfile()\r\n    // }\r\n\r\n    render() {\r\n        // console.log(\"RENDER PROFILE\");\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner = {!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n                     savePhoto ={this.props.savePhoto}\r\n                     saveProfile={this.props.saveProfile}/>\r\n\r\n\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    //console.log('mapStateToProps PROFILE')\r\n    return ({\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authorizedUserId: state.auth.userId,\r\n        isAuth: state.auth.isAuth\r\n\r\n    })\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter\r\n)(ProfileContainer);\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}