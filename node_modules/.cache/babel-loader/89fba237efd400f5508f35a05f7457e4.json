{"ast":null,"code":"import React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { sendMessageActionCreator, updateNewMessageBodyActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\"; // const DialogsContainer = ()=>{\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//                     let messagePage = store.getState().dialogsPage;\n//                     let addMessage =()=>{\n//                         store.dispatch(sendMessageActionCreator());\n//                     }\n//                     let onNewMessageChange = (body)=>{\n//                         store.dispatch(updateNewMessageBodyActionCreator(body));\n//                     }\n//                     return (\n//                         <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={addMessage}\n//                                  messagePage={messagePage}/>\n//                     )\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    messagePage: state.dialogsPage\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateNewMessageBody: function updateNewMessageBody(body) {\n      dispatch(updateNewMessageBodyActionCreator(body));\n    },\n    sendMessage: function sendMessage() {\n      dispatch(sendMessageActionCreator());\n    }\n  };\n};\n\nvar DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Dialogs/DialogsContainer.js"],"names":["React","s","NavLink","Message","DialogItem","sendMessageActionCreator","updateNewMessageBodyActionCreator","Dialogs","StoreContext","connect","mapStateToProps","state","messagePage","dialogsPage","mapDispatchToProps","dispatch","updateNewMessageBody","body","sendMessage","DialogsContainer"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,wBAAR,EAAkCC,iCAAlC,QAA0E,6BAA1E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,eAAe,GAAE,SAAjBA,eAAiB,CAACC,KAAD,EAAS;AAC1B,SAAM;AACNC,IAAAA,WAAW,EAACD,KAAK,CAACE;AADZ,GAAN;AAGH,CAJD;;AAKA,IAAIC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD,EAAY;AACjC,SAAM;AACFC,IAAAA,oBAAoB,EAAE,8BAACC,IAAD,EAAQ;AAC1BF,MAAAA,QAAQ,CAACT,iCAAiC,CAACW,IAAD,CAAlC,CAAR;AACH,KAHC;AAIFC,IAAAA,WAAW,EAAE,uBAAI;AACbH,MAAAA,QAAQ,CAACV,wBAAwB,EAAzB,CAAR;AACH;AANC,GAAN;AAQH,CATD;;AAWA,IAAMc,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CP,OAA7C,CAAzB;AAEA,eAAgBY,gBAAhB","sourcesContent":["import React from 'react';\nimport s from \"./Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport {connect} from \"react-redux\";\n\n// const DialogsContainer = ()=>{\n//\n//     return (\n//         <StoreContext.Consumer>\n//             {\n//                 (store) => {\n//                     let messagePage = store.getState().dialogsPage;\n//                     let addMessage =()=>{\n//                         store.dispatch(sendMessageActionCreator());\n//                     }\n//                     let onNewMessageChange = (body)=>{\n//                         store.dispatch(updateNewMessageBodyActionCreator(body));\n//                     }\n//                     return (\n//                         <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={addMessage}\n//                                  messagePage={messagePage}/>\n//                     )\n//                 }\n//             }\n//         </StoreContext.Consumer>\n//     )\n// }\nlet mapStateToProps =(state)=>{\n    return{\n    messagePage:state.dialogsPage,\n    }\n}\nlet mapDispatchToProps = (dispatch)=>{\n    return{\n        updateNewMessageBody: (body)=>{\n            dispatch(updateNewMessageBodyActionCreator(body));\n        },\n        sendMessage: ()=>{\n            dispatch(sendMessageActionCreator());\n        },\n    }\n}\n\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs);\n\nexport  default DialogsContainer;"]},"metadata":{},"sourceType":"module"}