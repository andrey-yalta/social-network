{"ast":null,"code":"import _objectSpread from \"/Users/andrejzaharcenko/Desktop/react/social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { authAPI } from \"../api/api\";\nimport { stopSubmit } from \"redux-form\";\nimport { getAuthUserData } from \"./auth-reducer\";\nvar INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nvar initialState = {\n  initialized: false\n};\n\nvar appReducer = function appReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return _objectSpread({}, state, {\n        initialized: true\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport var initializedSuccess = function initializedSuccess() {\n  return {\n    type: INITIALIZED_SUCCESS\n  };\n};\nexport var initializeApp = function initializeApp() {\n  return function (dispatch) {\n    var promise = dispatch(getAuthUserData()); //dispatch(somethingelse());\n    //dispatch(somethingelse());\n\n    Promise.all([promise]).then(function () {\n      dispatch(initializedSuccess());\n    });\n  };\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/react/social-network/src/redux/app-reducer.js"],"names":["authAPI","stopSubmit","getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":";AAAA,SAAQA,OAAR,QAAsB,YAAtB;AACA,SAAQC,UAAR,QAAyB,YAAzB;AACA,SAAQC,eAAR,QAA8B,gBAA9B;AAEA,IAAMC,mBAAmB,GAAG,qBAA5B;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBH,YAAyB;AAAA,MAAXI,MAAW;;AACjD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,mBAAL;AACI,+BACOI,KADP;AAEIF,QAAAA,WAAW,EAAE;AAFjB;;AAKJ;AACI,aAAOE,KAAP;AARR;AAUH,CAXD;;AAcA,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB;AAAA,SAAO;AAACD,IAAAA,IAAI,EAAEN;AAAP,GAAP;AAAA,CAA3B;AAEP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAc;AAC7C,QAAIC,OAAO,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAtB,CAD6C,CAG7C;AACA;;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,YAAM;AACRJ,MAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,KAHL;AAIH,GAT4B;AAAA,CAAtB;AAYP,eAAeJ,UAAf","sourcesContent":["import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}