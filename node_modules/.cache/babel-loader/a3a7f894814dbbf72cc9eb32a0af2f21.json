{"ast":null,"code":"import _toConsumableArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nvar ADD_POST = \"ADD-POST\"; // const UPDATE_NEW_POST_TEXT =\"UPDATE-NEW-POST-TEXT\";\n\nvar SET_USER_PROFILE = \"SET_USER_PROFILE\";\nvar SET_STATUS = \"SET_STATUS\";\nvar initialState = {\n  postsData: [{\n    id: 1,\n    text: \"Hello\",\n    like: 12\n  }, {\n    id: 2,\n    text: \"How are you, man?\",\n    like: 11\n  }, {\n    id: 3,\n    text: \"What interestind in your life?\",\n    like: 1\n  }, {\n    id: 4,\n    text: \"I'm glad to hear you!\",\n    like: 5\n  }],\n  // newPostText:\"it-camasutra.com\",\n  profile: null,\n  status: \"\"\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 5,\n          text: action.newPostText,\n          like: 0\n        };\n\n        var newState = _objectSpread({}, state, {\n          postsData: _toConsumableArray(state.postsData)\n        }); //поверхностная и глубокая копия\n\n\n        newState.postsData.push(newPost);\n        newState.newPostText = \"\";\n        return newState;\n      }\n    // case UPDATE_NEW_POST_TEXT:{\n    //     let newState = {...state}\n    //     newState.newPostText = action.newText;\n    //     return newState}\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var addPostActionCreator = function addPostActionCreator(newPostText) {\n  return {\n    type: \"ADD-POST\",\n    newPostText: newPostText\n  };\n}; // export const newPostTextActionCreator = (text) =>{\n//     return {type:'UPDATE-NEW-POST-TEXT', newText:text}\n// };\n\nexport var setUserProfile = function setUserProfile(profile) {\n  return {\n    type: \"SET_USER_PROFILE\",\n    profile: profile\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: \"SET_STATUS\",\n    status: status\n  };\n};\nexport var getUserProfile = function getUserProfile(userId) {\n  return function (dispatch) {\n    usersAPI.getProfile(userId).then(function (response) {\n      dispatch(setUserProfile(response.data));\n    });\n  };\n};\nexport var getStatus = function getStatus(userId) {\n  return function (dispatch) {\n    profileAPI.getStatus(userId).then(function (response) {\n      dispatch(setStatus(response.data));\n    });\n  };\n};\nexport var updateStatus = function updateStatus(status) {\n  return function (dispatch) {\n    profileAPI.updateStatus(status).then(function (response) {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n  };\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","text","like","profile","status","profileReducer","state","action","type","newPost","newPostText","newState","push","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","then","response","data","getStatus","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\n// const UPDATE_NEW_POST_TEXT =\"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\n\nlet initialState = {\n    postsData: [\n        {id:1,text: \"Hello\", like:12},\n        {id:2,text: \"How are you, man?\",like:11},\n        {id:3,text: \"What interestind in your life?\",like:1},\n        {id:4,text: \"I'm glad to hear you!\",like: 5}],\n    // newPostText:\"it-camasutra.com\",\n    profile:null,\n    status: \"\",\n};\nconst profileReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost ={\n                id:5,text:action.newPostText, like:0\n            };\n            let newState = {...state, postsData: [...state.postsData]}; //поверхностная и глубокая копия\n\n            newState.postsData.push(newPost);\n            newState.newPostText = \"\";\n            return newState}\n        // case UPDATE_NEW_POST_TEXT:{\n        //     let newState = {...state}\n        //     newState.newPostText = action.newText;\n        //     return newState}\n        case SET_USER_PROFILE:{\n\n            return {...state, profile: action.profile};\n        }\n        case SET_STATUS:{\n            return {...state, status: action.status};\n        }\n\n        default:{\n            return state}\n}};\nexport const  addPostActionCreator =(newPostText) =>{\n    return {type:\"ADD-POST\",newPostText}\n};\n// export const newPostTextActionCreator = (text) =>{\n//     return {type:'UPDATE-NEW-POST-TEXT', newText:text}\n// };\nexport const setUserProfile = (profile)=>{\n    return{type:\"SET_USER_PROFILE\", profile};\n};\nexport const setStatus = (status)=>{\n    return{type:\"SET_STATUS\", status};\n};\nexport const getUserProfile = (userId)=>(dispatch)=>{\n    usersAPI.getProfile(userId)\n        .then(response =>{\n\n           dispatch(setUserProfile(response.data));\n        });\n};\nexport const getStatus = (userId)=>(dispatch)=>{\n    profileAPI.getStatus( userId)\n        .then(response =>{\n\n            dispatch(setStatus(response.data))\n        })\n};\nexport const updateStatus = (status)=>(dispatch)=>{\n    profileAPI.updateStatus( status)\n        .then(response =>{\n            if (response.data.resultCode === 0){\n                dispatch(setStatus(status))\n            }\n\n        })\n};\n\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}