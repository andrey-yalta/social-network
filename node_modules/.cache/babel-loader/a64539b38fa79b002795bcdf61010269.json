{"ast":null,"code":"import _toConsumableArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar ADD_POST = \"ADD-POST\";\nvar UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nvar SET_USER_PROFILE = \"SET_USER_PROFILE\";\nvar initialState = {\n  postsData: [{\n    id: 1,\n    text: \"Hello\",\n    like: 12\n  }, {\n    id: 2,\n    text: \"How are you, man?\",\n    like: 11\n  }, {\n    id: 3,\n    text: \"What interestind in your life?\",\n    like: 1\n  }, {\n    id: 4,\n    text: \"I'm glad to hear you!\",\n    like: 5\n  }],\n  newPostText: \"it-camasutra.com\"\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 5,\n          text: state.newPostText,\n          like: 0\n        };\n\n        var newState = _objectSpread({}, state, {\n          postsData: _toConsumableArray(state.postsData)\n        }); //поверхностная и глубокая копия\n\n\n        newState.postsData.push(newPost);\n        newState.newPostText = \"\";\n        return newState;\n      }\n\n    case UPDATE_NEW_POST_TEXT:\n      {\n        var _newState = _objectSpread({}, state);\n\n        _newState.newPostText = action.newText;\n        return _newState;\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var addPostActionCreator = function addPostActionCreator() {\n  return {\n    type: \"ADD-POST\"\n  };\n};\nexport var newPostTextActionCreator = function newPostTextActionCreator(text) {\n  return {\n    type: 'UPDATE-NEW-POST-TEXT',\n    newText: text\n  };\n};\nexport var setUserProfile = function setUserProfile() {};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/profile-reducer.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","SET_USER_PROFILE","initialState","postsData","id","text","like","newPostText","profileReducer","state","action","type","newPost","newState","push","newText","addPostActionCreator","newPostTextActionCreator","setUserProfile"],"mappings":";;AAAA,IAAMA,QAAQ,GAAG,UAAjB;AACA,IAAMC,oBAAoB,GAAE,sBAA5B;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE,CACP;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,OAAZ;AAAqBC,IAAAA,IAAI,EAAC;AAA1B,GADO,EAEP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,mBAAZ;AAAgCC,IAAAA,IAAI,EAAC;AAArC,GAFO,EAGP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,gCAAZ;AAA6CC,IAAAA,IAAI,EAAC;AAAlD,GAHO,EAIP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,uBAAZ;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GAJO,CADI;AAMfC,EAAAA,WAAW,EAAC;AANG,CAAnB;;AAQA,IAAMC,cAAc,GAAE,SAAhBA,cAAgB,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBP,YAAuB;AAAA,MAATQ,MAAS;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,QAAL;AAAc;AACV,YAAIa,OAAO,GAAE;AACTR,UAAAA,EAAE,EAAC,CADM;AACJC,UAAAA,IAAI,EAACI,KAAK,CAACF,WADP;AACoBD,UAAAA,IAAI,EAAC;AADzB,SAAb;;AAGA,YAAIO,QAAQ,qBAAOJ,KAAP;AAAcN,UAAAA,SAAS,qBAAMM,KAAK,CAACN,SAAZ;AAAvB,UAAZ,CAJU,CAIkD;;;AAE5DU,QAAAA,QAAQ,CAACV,SAAT,CAAmBW,IAAnB,CAAwBF,OAAxB;AACAC,QAAAA,QAAQ,CAACN,WAAT,GAAuB,EAAvB;AACA,eAAOM,QAAP;AAAgB;;AACpB,SAAKb,oBAAL;AAA0B;AACtB,YAAIa,SAAQ,qBAAOJ,KAAP,CAAZ;;AACAI,QAAAA,SAAQ,CAACN,WAAT,GAAuBG,MAAM,CAACK,OAA9B;AACA,eAAOF,SAAP;AAAgB;;AAEpB;AAAQ;AACJ,eAAOJ,KAAP;AAAa;AAhBrB;AAiBF,CAlBF;;AAmBA,OAAO,IAAMO,oBAAoB,GAAE,SAAtBA,oBAAsB,GAAK;AACpC,SAAO;AAACL,IAAAA,IAAI,EAAC;AAAN,GAAP;AACH,CAFM;AAGP,OAAO,IAAMM,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACZ,IAAD,EAAS;AAC7C,SAAO;AAACM,IAAAA,IAAI,EAAC,sBAAN;AAA8BI,IAAAA,OAAO,EAACV;AAAtC,GAAP;AACH,CAFM;AAGP,OAAO,IAAMa,cAAc,GAAG,SAAjBA,cAAiB,GAAI,CAEjC,CAFM;AAGP,eAAeV,cAAf","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT =\"UPDATE-NEW-POST-TEXT\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\n\nlet initialState = {\n    postsData: [\n        {id:1,text: \"Hello\", like:12},\n        {id:2,text: \"How are you, man?\",like:11},\n        {id:3,text: \"What interestind in your life?\",like:1},\n        {id:4,text: \"I'm glad to hear you!\",like: 5}],\n    newPostText:\"it-camasutra.com\"\n};\nconst profileReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost ={\n                id:5,text:state.newPostText, like:0\n            };\n            let newState = {...state, postsData: [...state.postsData]}; //поверхностная и глубокая копия\n\n            newState.postsData.push(newPost);\n            newState.newPostText = \"\";\n            return newState}\n        case UPDATE_NEW_POST_TEXT:{\n            let newState = {...state}\n            newState.newPostText = action.newText;\n            return newState}\n\n        default:{\n            return state}\n}};\nexport const addPostActionCreator =() =>{\n    return {type:\"ADD-POST\"}\n};\nexport const newPostTextActionCreator = (text) =>{\n    return {type:'UPDATE-NEW-POST-TEXT', newText:text}\n};\nexport const setUserProfile = ()=>{\n\n};\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}