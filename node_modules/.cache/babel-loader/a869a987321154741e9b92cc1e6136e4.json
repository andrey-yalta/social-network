{"ast":null,"code":"import _slicedToArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/common/Paginator/Paginator.js\";\n\nimport React, { useState } from 'react';\nimport s from \"./Paginator.module.css\";\n\nvar Paginator = function Paginator(_ref) {\n  var currentPage = _ref.currentPage,\n      totalItemsCount = _ref.totalItemsCount,\n      pageSize = _ref.pageSize,\n      onPageChanged = _ref.onPageChanged,\n      _ref$portionSize = _ref.portionSize,\n      portionSize = _ref$portionSize === void 0 ? 10 : _ref$portionSize;\n  var pagesCount = Math.ceil(totalItemsCount / pageSize);\n  var pages = [];\n\n  for (var i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  var portionCount = Math.ceil(pagesCount / portionSize);\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      portionNumber = _useState2[0],\n      setPortionNumber = _useState2[1];\n\n  var leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n  var rightPortionPageNumber = portionNumber * portionSize;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }\n  }, portionNumber > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    onClick: function onClick() {\n      setPortionNumber(portionNumber - 1);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \" PREV \"), pages.filter(function (p) {\n    return p >= leftPortionPageNumber;\n  }).map(function (p) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: currentPage === p && s.selected__page,\n      onClick: function onClick(e) {\n        onPageChanged(p);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 25\n      }\n    }, \" \", p);\n  }));\n};\n\nexport default Paginator;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/common/Paginator/Paginator.js"],"names":["React","useState","s","Paginator","currentPage","totalItemsCount","pageSize","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","filter","p","map","selected__page","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,CAAP,MAAc,wBAAd;;AAEA,IAAIC,SAAS,GAAG,SAAZA,SAAY,OAA6E;AAAA,MAA3EC,WAA2E,QAA3EA,WAA2E;AAAA,MAA9DC,eAA8D,QAA9DA,eAA8D;AAAA,MAA9CC,QAA8C,QAA9CA,QAA8C;AAAA,MAArCC,aAAqC,QAArCA,aAAqC;AAAA,8BAAtBC,WAAsB;AAAA,MAAtBA,WAAsB,iCAAR,EAAQ;AAEzF,MAAIC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,eAAe,GAAGC,QAA5B,CAAjB;AAEA,MAAIM,KAAK,GAAG,EAAZ;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIJ,UAArB,EAAiCI,CAAC,EAAlC,EAAsC;AAClCD,IAAAA,KAAK,CAACE,IAAN,CAAWD,CAAX;AACH;;AAED,MAAIE,YAAY,GAAGL,IAAI,CAACC,IAAL,CAAUF,UAAU,GAAED,WAAtB,CAAnB;;AATyF,kBAUlDP,QAAQ,CAAC,CAAD,CAV0C;AAAA;AAAA,MAUrFe,aAVqF;AAAA,MAUtEC,gBAVsE;;AAWzF,MAAIC,qBAAqB,GAAG,CAACF,aAAa,GAAG,CAAjB,IAAqBR,WAArB,GAAkC,CAA9D;AACA,MAAIW,sBAAsB,GAAGH,aAAa,GAAGR,WAA7C;AAGA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFQ,aAAa,GAAE,CAAf,iBACD;AAAQ,IAAA,OAAO,EAAE,mBAAI;AAACC,MAAAA,gBAAgB,CAACD,aAAa,GAAE,CAAhB,CAAhB;AAAmC,KAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFG,EAIEJ,KAAK,CACDQ,MADJ,CACW,UAAAC,CAAC;AAAA,WAAEA,CAAC,IAAIH,qBAAP;AAAA,GADZ,EAEII,GAFJ,CAEQ,UAAAD,CAAC,EAAI;AACN,wBACI;AAAM,MAAA,SAAS,EAAEjB,WAAW,KAAKiB,CAAhB,IAAqBnB,CAAC,CAACqB,cAAxC;AACM,MAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACZjB,QAAAA,aAAa,CAACc,CAAD,CAAb;AACH,OAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAGWA,CAHX,CADJ;AAMP,GATA,CAJF,CAAP;AAeH,CA9BD;;AAgCA,eAAelB,SAAf","sourcesContent":["import React, {useState} from 'react';\nimport s from \"./Paginator.module.css\";\n\nlet Paginator = ({currentPage, totalItemsCount,pageSize,onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i)\n    }\n\n    let portionCount = Math.ceil(pagesCount/ portionSize)\n    let[portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1)* portionSize +1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div>\n        {portionNumber >1 &&\n        <button onClick={()=>{setPortionNumber(portionNumber -1)}}> PREV </button>}\n\n            {pages\n                .filter(p=>p >= leftPortionPageNumber)\n                .map(p => {\n                    return (\n                        <span className={currentPage === p && s.selected__page}\n                              onClick={(e) => {\n                                  onPageChanged(p)\n                              }}> {p}</span>\n                    )\n            })}\n        </div>\n}\n\nexport default Paginator;"]},"metadata":{},"sourceType":"module"}