{"ast":null,"code":"import _classCallCheck from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js\";\nimport React from 'react';\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setTotalUsersCount, setUsers, toggleIsFetching, unFollowText } from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport getUsers from \"../../api/api\";\n\nvar UserAPIComponent = /*#__PURE__*/function (_React$Component) {\n  _inherits(UserAPIComponent, _React$Component);\n\n  function UserAPIComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserAPIComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserAPIComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onPageChanged = function (p) {\n      _this.props.setCurrentPage(p);\n\n      _this.props.toggleIsFetching(true);\n\n      getUsers(p, _this.props.pageSize).then(function (data) {\n        _this.props.setUsers(data.items);\n\n        _this.props.toggleIsFetching(false); // debugger;\n        // this.props.setTotalUsersCount(response.data.totalCount)\n\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(UserAPIComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n      this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n\n      getUsers(this.props.currentPage, this.props.pageSize).then(function (data) {\n        //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n        _this2.props.toggleIsFetching(false);\n\n        _this2.props.setUsers(data.items);\n\n        _this2.props.setTotalUsersCount(data.totalCount);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.isFetching ? /*#__PURE__*/React.createElement(Preloader, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 37\n        }\n      }) : null, /*#__PURE__*/React.createElement(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unFollowText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return UserAPIComponent;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow: follow,\n  unFollowText: unFollowText,\n  setUsers: setUsers,\n  setCurrentPage: setCurrentPage,\n  setTotalUsersCount: setTotalUsersCount,\n  toggleIsFetching: toggleIsFetching\n})(UserAPIComponent);","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Users/UsersContainer.js"],"names":["React","connect","follow","setCurrentPage","setTotalUsersCount","setUsers","toggleIsFetching","unFollowText","axios","Users","Preloader","getUsers","UserAPIComponent","onPageChanged","p","props","pageSize","then","data","items","currentPage","totalCount","isFetching","totalUsersCount","users","Component","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage, setTotalUsersCount,\n    setUsers, toggleIsFetching, unFollowText,\n} from \"../../redux/users-reducer\";\nimport * as axios from \"axios\";\nimport Users from \"./Users\";\nimport circles from \"./../../assets/img/circles.svg\";\nimport Preloader from \"../common/preloader/preloader\";\nimport getUsers from \"../../api/api\";\n\n\nclass UserAPIComponent extends React.Component{\n\n    componentDidMount() {//данный метод вызывается по умолчанию когда jsx уже прогрузился (комопнента react.component\n\n        this.props.toggleIsFetching(true); //эта херня нужная чтобы включать и выключать анимацию\n\n        getUsers(this.props.currentPage, this.props.pageSize).then(data =>{ //WidthCredentials - это значит использовать Cookie от сайта или нет!!\n            this.props.toggleIsFetching(false);\n            this.props.setUsers( data.items)\n            this.props.setTotalUsersCount( data.totalCount)\n        })\n    }\n    onPageChanged =(p) =>{\n        this.props.setCurrentPage(p);\n        this.props.toggleIsFetching(true);\n\n        getUsers(p,this.props.pageSize).then(data =>{\n            this.props.setUsers( data.items)\n            this.props.toggleIsFetching(false);\n            // debugger;\n            // this.props.setTotalUsersCount(response.data.totalCount)\n        })\n\n    }\n\n    render(){\n\n        return <>\n            {this.props.isFetching? <Preloader/>: null}\n            <Users totalUsersCount = {this.props.totalUsersCount} pageSize = {this.props.pageSize} currentPage = {this.props.currentPage}\n                      onPageChanged ={this.onPageChanged} users = {this.props.users} follow = {this.props.follow} unfollow={this.props.unFollowText}\n                 /></>\n    }\n}\n\n\n\n\n\n\nlet mapStateToProps = (state) => {\n    return{\n        users:state.usersPage.users,\n        pageSize:state.usersPage.pageSize,\n        totalUsersCount:state.usersPage.totalUsersCount,\n        currentPage:state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n\n    }\n}\n\nexport default connect(mapStateToProps, {follow,unFollowText, setUsers, setCurrentPage, setTotalUsersCount, toggleIsFetching})( UserAPIComponent);"]},"metadata":{},"sourceType":"module"}