{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Dialogs/DialogsContainer.js\";\n\nimport React from 'react';\nimport s from \"./Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport { sendMessageActionCreator, updateNewMessageBodyActionCreator } from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport { connect } from \"react-redux\";\n\nvar DialogsContainer = function DialogsContainer() {\n  return /*#__PURE__*/React.createElement(StoreContext.Consumer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, function (store) {\n    var messagePage = store.getState().dialogsPage;\n\n    var addMessage = function addMessage() {\n      store.dispatch(sendMessageActionCreator());\n    };\n\n    var onNewMessageChange = function onNewMessageChange(body) {\n      store.dispatch(updateNewMessageBodyActionCreator(body));\n    };\n\n    return /*#__PURE__*/React.createElement(Dialogs, {\n      updateNewMessageBody: onNewMessageChange,\n      sendMessage: addMessage,\n      messagePage: messagePage,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }\n    });\n  });\n};\n\nvar f1 = function f1(state) {};\n\nvar f2 = function f2() {};\n\nvar SuperDialogsContainer = connect(f1, f2)(Dialogs);\nexport default DialogsContainer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/components/Dialogs/DialogsContainer.js"],"names":["React","s","NavLink","Message","DialogItem","sendMessageActionCreator","updateNewMessageBodyActionCreator","Dialogs","StoreContext","connect","DialogsContainer","store","messagePage","getState","dialogsPage","addMessage","dispatch","onNewMessageChange","body","f1","state","f2","SuperDialogsContainer"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,SAAQC,OAAR,QAAsB,kBAAtB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,SAAQC,wBAAR,EAAkCC,iCAAlC,QAA0E,6BAA1E;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAI;AAEzB,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEQ,UAACC,KAAD,EAAW;AACP,QAAIC,WAAW,GAAGD,KAAK,CAACE,QAAN,GAAiBC,WAAnC;;AACA,QAAIC,UAAU,GAAE,SAAZA,UAAY,GAAI;AAChBJ,MAAAA,KAAK,CAACK,QAAN,CAAeX,wBAAwB,EAAvC;AACH,KAFD;;AAGA,QAAIY,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD,EAAQ;AAC7BP,MAAAA,KAAK,CAACK,QAAN,CAAeV,iCAAiC,CAACY,IAAD,CAAhD;AACH,KAFD;;AAGA,wBACI,oBAAC,OAAD;AAAS,MAAA,oBAAoB,EAAED,kBAA/B;AAAmD,MAAA,WAAW,EAAEF,UAAhE;AACS,MAAA,WAAW,EAAEH,WADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAIH,GAdT,CADJ;AAmBH,CArBD;;AAsBA,IAAIO,EAAE,GAAE,SAAJA,EAAI,CAACC,KAAD,EAAS,CAEhB,CAFD;;AAGA,IAAIC,EAAE,GAAG,SAALA,EAAK,GAAI,CAEZ,CAFD;;AAIA,IAAMC,qBAAqB,GAAGb,OAAO,CAACU,EAAD,EAAKE,EAAL,CAAP,CAAgBd,OAAhB,CAA9B;AAEA,eAAgBG,gBAAhB","sourcesContent":["import React from 'react';\nimport s from \"./Dialogs.module.css\"\nimport {NavLink} from \"react-router-dom\";\nimport Message from \"./Message/Message\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport {sendMessageActionCreator, updateNewMessageBodyActionCreator} from \"../../redux/dialogs-reducer\";\nimport Dialogs from \"./Dialogs\";\nimport StoreContext from \"../../StoreContext\";\nimport {connect} from \"react-redux\";\n\nconst DialogsContainer = ()=>{\n\n    return (\n        <StoreContext.Consumer>\n            {\n                (store) => {\n                    let messagePage = store.getState().dialogsPage;\n                    let addMessage =()=>{\n                        store.dispatch(sendMessageActionCreator());\n                    }\n                    let onNewMessageChange = (body)=>{\n                        store.dispatch(updateNewMessageBodyActionCreator(body));\n                    }\n                    return (\n                        <Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={addMessage}\n                                 messagePage={messagePage}/>\n                    )\n                }\n            }\n        </StoreContext.Consumer>\n    )\n}\nlet f1 =(state)=>{\n    \n}\nlet f2 = ()=>{\n\n}\n\nconst SuperDialogsContainer = connect(f1, f2)(Dialogs);\n\nexport  default DialogsContainer;"]},"metadata":{},"sourceType":"module"}