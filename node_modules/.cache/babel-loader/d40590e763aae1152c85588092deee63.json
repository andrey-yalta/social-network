{"ast":null,"code":"import * as axios from \"axios\";\nvar instance = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"5d16bb3c-e00e-4326-9938-6b442a102e86\"\n  }\n});\nexport var usersAPI = {\n  getUsers: function getUsers() {\n    var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    return instance.get(\"users?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(function (response) {\n      return response.data;\n    });\n  },\n  follow: function follow(userId) {\n    debugger;\n    return instance.post(\"follow/\".concat(userId));\n  },\n  unFollow: function unFollow(userId) {\n    return instance.delete(\"follow/\".concat(userId));\n  },\n  getProfile: function getProfile(userId) {\n    console.warn('obsolete message. please use api obj');\n    return profileAPI.getProfile(userId);\n  }\n};\nexport var profileAPI = {\n  getProfile: function getProfile(userId) {\n    return instance.get(\"profile/\" + userId);\n  },\n  getStatus: function getStatus(userId) {\n    return instance.get(\"profile/status/\" + userId);\n  },\n  updateStatus: function updateStatus(status) {\n    return instance.put(\"profile/status/\", {\n      status: status\n    });\n  },\n  savePhoto: function savePhoto(file) {\n    var formData = new FormData();\n    formData.append(\"image\", file);\n    return instance.put(\"profile/photo\", formData, {\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n  },\n  saveProfile: function saveProfile(profile) {\n    return instance.put(\"profile\", profile);\n  }\n};\nexport var authAPI = {\n  me: function me() {\n    return instance.get(\"auth/me\");\n  },\n  login: function login(email, password) {\n    var rememberMe = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return instance.post(\"auth/login\", {\n      email: email,\n      password: password,\n      rememberMe: rememberMe\n    });\n  },\n  logout: function logout() {\n    return instance.delete(\"auth/login\");\n  }\n};\n\nvar getUsers2 = function getUsers2() {\n  var currentPage = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n  var pageSize = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n  return instance.get(\"follow?page=\".concat(currentPage, \"&count=\").concat(pageSize)).then(function (response) {\n    return response.data;\n  });\n};\n\nexport var securityAPI = {\n  getCaptchaUrl: function getCaptchaUrl() {\n    return instance.get(\"/security/\");\n  }\n};","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unFollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","savePhoto","file","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","logout","getUsers2","securityAPI","getCaptchaUrl"],"mappings":"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","sourcesContent":["import * as axios from \"axios\";\n\n\n\n\nconst instance = axios.create({\nwithCredentials: true,\n    baseURL:`https://social-network.samuraijs.com/api/1.0/`,\n    headers:{\n        \"API-KEY\":\"5d16bb3c-e00e-4326-9938-6b442a102e86\"\n    }\n});\n\n\nexport const usersAPI  = {\n    getUsers (currentPage=1,pageSize=10)   {\n        return instance.get( `users?page=${currentPage}&count=${pageSize}`\n        )\n            .then(response=> { return response.data})\n    },\n    follow(userId){\n        debugger;\n        return instance.post(`follow/${userId}`)\n    },\n    unFollow(userId){\n       return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId){\n        console.warn('obsolete message. please use api obj')\n        return profileAPI.getProfile(userId);\n    },\n}\nexport const profileAPI  = {\n    getProfile(userId){\n\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId){\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status){\n        return instance.put(`profile/status/`, {status:status});\n    },\n    savePhoto(file){\n        let formData = new FormData();\n        formData.append(\"image\", file)\n\n        return instance.put(`profile/photo`, formData, {\n            headers:{\n                \"Content-Type\":\"multipart/form-data\"\n            }\n        });\n    },\n    saveProfile(profile){\n        return instance.put(`profile`, profile);\n    }\n}\nexport const authAPI = {\n    me(){\n        return instance.get(`auth/me`)\n    },\n    login(email, password, rememberMe = false){\n        return instance.post(`auth/login`, {email, password, rememberMe})\n    },\n    logout( ){\n        return instance.delete(`auth/login` )\n    }\n}\n\n\nconst getUsers2 = (currentPage=1,pageSize=10) => {\n    return instance.get(`follow?page=${currentPage}&count=${pageSize}`\n)\n        .then(response=> { return response.data})\n}\nexport const securityAPI = {\n    getCaptchaUrl(){\n        return instance.get(`/security/`)\n    }\n}\n"]},"metadata":{},"sourceType":"module"}