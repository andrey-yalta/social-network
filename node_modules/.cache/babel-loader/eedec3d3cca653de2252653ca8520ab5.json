{"ast":null,"code":"import _regeneratorRuntime from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport { profileAPI, usersAPI } from \"../api/api\";\nvar ADD_POST = \"ADD-POST\";\nvar SET_USER_PROFILE = \"SET_USER_PROFILE\";\nvar SET_STATUS = \"SET_STATUS\";\nvar initialState = {\n  postsData: [{\n    id: 1,\n    text: \"Hello\",\n    like: 12\n  }, {\n    id: 2,\n    text: \"How are you, man?\",\n    like: 11\n  }, {\n    id: 3,\n    text: \"What interestind in your life?\",\n    like: 1\n  }, {\n    id: 4,\n    text: \"I'm glad to hear you!\",\n    like: 5\n  }],\n  profile: null,\n  status: \"\"\n};\n\nvar profileReducer = function profileReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      {\n        var newPost = {\n          id: 5,\n          text: action.newPostText,\n          like: 0\n        };\n\n        var newState = _objectSpread({}, state, {\n          postsData: _toConsumableArray(state.postsData)\n        }); //поверхностная и глубокая копия\n\n\n        newState.postsData.push(newPost);\n        newState.newPostText = \"\";\n        return newState;\n      }\n\n    case SET_USER_PROFILE:\n      {\n        return _objectSpread({}, state, {\n          profile: action.profile\n        });\n      }\n\n    case SET_STATUS:\n      {\n        return _objectSpread({}, state, {\n          status: action.status\n        });\n      }\n\n    default:\n      {\n        return state;\n      }\n  }\n};\n\nexport var addPostActionCreator = function addPostActionCreator(newPostText) {\n  return {\n    type: \"ADD-POST\",\n    newPostText: newPostText\n  };\n};\nexport var setUserProfile = function setUserProfile(profile) {\n  return {\n    type: \"SET_USER_PROFILE\",\n    profile: profile\n  };\n};\nexport var setStatus = function setStatus(status) {\n  return {\n    type: \"SET_STATUS\",\n    status: status\n  };\n};\nexport var getUserProfile = function getUserProfile(userId) {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return usersAPI.getProfile(userId);\n\n            case 2:\n              response = _context.sent;\n              dispatch(setUserProfile(response.data));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var getStatus = function getStatus(userId) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return profileAPI.getStatus(userId);\n\n            case 2:\n              response = _context2.sent;\n              dispatch(setStatus(response.data));\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var updateStatus = function updateStatus(status) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch) {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return profileAPI.updateStatus(status);\n\n            case 2:\n              response = _context3.sent;\n\n              if (response.data.resultCode === 0) {\n                dispatch(setStatus(status));\n              }\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/andrejzaharcenko/Desktop/test/react-way-of-samurai/src/redux/profile-reducer.js"],"names":["profileAPI","usersAPI","ADD_POST","SET_USER_PROFILE","SET_STATUS","initialState","postsData","id","text","like","profile","status","profileReducer","state","action","type","newPost","newPostText","newState","push","addPostActionCreator","setUserProfile","setStatus","getUserProfile","userId","dispatch","getProfile","response","data","getStatus","updateStatus","resultCode"],"mappings":";;;;AAAA,SAAQA,UAAR,EAAoBC,QAApB,QAAmC,YAAnC;AAEA,IAAMC,QAAQ,GAAG,UAAjB;AACA,IAAMC,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,SAAS,EAAE,CACP;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,OAAZ;AAAqBC,IAAAA,IAAI,EAAC;AAA1B,GADO,EAEP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,mBAAZ;AAAgCC,IAAAA,IAAI,EAAC;AAArC,GAFO,EAGP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,gCAAZ;AAA6CC,IAAAA,IAAI,EAAC;AAAlD,GAHO,EAIP;AAACF,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAE,uBAAZ;AAAoCC,IAAAA,IAAI,EAAE;AAA1C,GAJO,CADI;AAMfC,EAAAA,OAAO,EAAC,IANO;AAOfC,EAAAA,MAAM,EAAE;AAPO,CAAnB;;AAUA,IAAMC,cAAc,GAAE,SAAhBA,cAAgB,GAAgC;AAAA,MAA/BC,KAA+B,uEAAvBR,YAAuB;AAAA,MAATS,MAAS;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKb,QAAL;AAAc;AACV,YAAIc,OAAO,GAAE;AACTT,UAAAA,EAAE,EAAC,CADM;AACJC,UAAAA,IAAI,EAACM,MAAM,CAACG,WADR;AACqBR,UAAAA,IAAI,EAAC;AAD1B,SAAb;;AAGA,YAAIS,QAAQ,qBAAOL,KAAP;AAAcP,UAAAA,SAAS,qBAAMO,KAAK,CAACP,SAAZ;AAAvB,UAAZ,CAJU,CAIkD;;;AAC5DY,QAAAA,QAAQ,CAACZ,SAAT,CAAmBa,IAAnB,CAAwBH,OAAxB;AACAE,QAAAA,QAAQ,CAACD,WAAT,GAAuB,EAAvB;AACA,eAAOC,QAAP;AAAgB;;AACpB,SAAKf,gBAAL;AAAsB;AAClB,iCAAWU,KAAX;AAAkBH,UAAAA,OAAO,EAAEI,MAAM,CAACJ;AAAlC;AACH;;AACD,SAAKN,UAAL;AAAgB;AACZ,iCAAWS,KAAX;AAAkBF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAAjC;AACH;;AACD;AAAQ;AACJ,eAAOE,KAAP;AAAa;AAhBrB;AAiBF,CAlBF;;AAoBA,OAAO,IAAOO,oBAAoB,GAAE,SAAtBA,oBAAsB,CAACH,WAAD,EAAgB;AAChD,SAAO;AAACF,IAAAA,IAAI,EAAC,UAAN;AAAiBE,IAAAA,WAAW,EAAXA;AAAjB,GAAP;AACH,CAFM;AAGP,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACX,OAAD,EAAW;AACrC,SAAM;AAACK,IAAAA,IAAI,EAAC,kBAAN;AAA0BL,IAAAA,OAAO,EAAPA;AAA1B,GAAN;AACH,CAFM;AAGP,OAAO,IAAMY,SAAS,GAAG,SAAZA,SAAY,CAACX,MAAD,EAAU;AAC/B,SAAM;AAACI,IAAAA,IAAI,EAAC,YAAN;AAAoBJ,IAAAA,MAAM,EAANA;AAApB,GAAN;AACH,CAFM;AAIP,OAAO,IAAMY,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD;AAAA;AAAA,wEAAW,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAChBxB,QAAQ,CAACyB,UAAT,CAAoBF,MAApB,CADgB;;AAAA;AACjCG,cAAAA,QADiC;AAE9BF,cAAAA,QAAQ,CAACJ,cAAc,CAACM,QAAQ,CAACC,IAAV,CAAf,CAAR;;AAF8B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAKP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACL,MAAD;AAAA;AAAA,yEAAW,kBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACVzB,UAAU,CAAC6B,SAAX,CAAsBL,MAAtB,CADU;;AAAA;AAC5BG,cAAAA,QAD4B;AAExBF,cAAAA,QAAQ,CAACH,SAAS,CAACK,QAAQ,CAACC,IAAV,CAAV,CAAR;;AAFwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB;AAIP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACnB,MAAD;AAAA;AAAA,yEAAW,kBAAMc,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACdzB,UAAU,CAAC8B,YAAX,CAAyBnB,MAAzB,CADc;;AAAA;AAC/BgB,cAAAA,QAD+B;;AAE3B,kBAAIA,QAAQ,CAACC,IAAT,CAAcG,UAAd,KAA6B,CAAjC,EAAmC;AAC/BN,gBAAAA,QAAQ,CAACH,SAAS,CAACX,MAAD,CAAV,CAAR;AACH;;AAJ0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAX;;AAAA;AAAA;AAAA;AAAA;AAAA,CAArB;AAOP,eAAeC,cAAf","sourcesContent":["import {profileAPI, usersAPI} from \"../api/api\";\n\nconst ADD_POST = \"ADD-POST\";\nconst SET_USER_PROFILE = \"SET_USER_PROFILE\";\nconst SET_STATUS = \"SET_STATUS\";\n\nlet initialState = {\n    postsData: [\n        {id:1,text: \"Hello\", like:12},\n        {id:2,text: \"How are you, man?\",like:11},\n        {id:3,text: \"What interestind in your life?\",like:1},\n        {id:4,text: \"I'm glad to hear you!\",like: 5}],\n    profile:null,\n    status: \"\",\n};\n\nconst profileReducer =(state = initialState, action)=>{\n    switch (action.type) {\n        case ADD_POST:{\n            let newPost ={\n                id:5,text:action.newPostText, like:0\n            };\n            let newState = {...state, postsData: [...state.postsData]}; //поверхностная и глубокая копия\n            newState.postsData.push(newPost);\n            newState.newPostText = \"\";\n            return newState}\n        case SET_USER_PROFILE:{\n            return {...state, profile: action.profile};\n        }\n        case SET_STATUS:{\n            return {...state, status: action.status};\n        }\n        default:{\n            return state}\n}};\n\nexport const  addPostActionCreator =(newPostText) =>{\n    return {type:\"ADD-POST\",newPostText}\n};\nexport const setUserProfile = (profile)=>{\n    return{type:\"SET_USER_PROFILE\", profile};\n};\nexport const setStatus = (status)=>{\n    return{type:\"SET_STATUS\", status};\n};\n\nexport const getUserProfile = (userId)=> async (dispatch)=>{\n    let response = await usersAPI.getProfile(userId)\n           dispatch(setUserProfile(response.data));\n};\n\nexport const getStatus = (userId)=> async (dispatch)=>{\n    let response = await  profileAPI.getStatus( userId)\n            dispatch(setStatus(response.data))\n};\nexport const updateStatus = (status)=> async(dispatch)=>{\n    let response = await profileAPI.updateStatus( status)\n            if (response.data.resultCode === 0){\n                dispatch(setStatus(status))\n            }\n};\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}