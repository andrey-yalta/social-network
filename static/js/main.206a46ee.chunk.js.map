{"version":3,"sources":["components/Users/users.module.css","assets/images/user.png","assets/images/preloader.svg","components/Navbar/Navbar.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Dialogs/Dialogs.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","redux/dialogs-reducer.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","components/common/Preloader/Preloader.js","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","redux/profile-reducer.js","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","App.js","index.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css"],"names":["module","exports","userPhoto","__webpack_require__","p","nav","item","activeLink","dialogs","dialogsItems","active","messages","message","Boolean","window","location","hostname","match","Navbar","react_default","a","createElement","className","s","NavLink","to","activeClassName","concat","initialState","id","name","dialogsReducer","state","arguments","length","undefined","action","type","body","newMessageBody","Object","objectSpread2","toConsumableArray","DialogItem","props","path","dialog","Message","required","value","maxLengthCreator","maxLength","FormControl","_ref","input","_ref$meta","meta","touched","error","children","hasError","styles","formControl","Textarea","restProps","child","objectWithoutProperties","FormsControls_FormControl","assign","Input","createField","placeholder","validators","component","text","Field","validate","maxLength50","reduxForm","form","onSubmit","handleSubmit","Dialogs","dialogsPage","dialogsElements","map","d","Dialogs_DialogItem_DialogItem","key","messagesElements","m","Dialogs_Message_Message","isAuth","Dialogs_AddMessageForm_AddMessageForm","values","sendMessage","Redirect","mapStateToPropsForRedirect","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","_React$Component","inherits","_super","createSuper","classCallCheck","this","apply","createClass","React","instance","axios","withCredentials","baseURL","headers","API-KEY","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","profileAPI","getStatus","updateStatus","status","put","authAPI","email","password","rememberMe","updateObjectInArray","items","itemId","objPropName","newObjProps","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","_ref2","asyncToGenerator","regenerator_default","mark","_callee2","apiMethod","actionCreator","wrap","_context2","prev","next","sent","resultCode","stop","_x2","_x3","_x4","_x5","usersReducer","followed","count","filter","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","_useState","useState","_useState2","slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","defineProperty","selectedPage","pageNumber","e","User","user","src","photos","small","disabled","some","Users","common_Paginator_Paginator","Users_User","Preloader","style","backgroundColor","preloader","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_this","_this$props","Fragment","common_Preloader_Preloader","components_Users_Users","_ref3","_callee3","_context3","bind","_x6","_ref4","_callee4","_context4","_x7","page","_callee","_context","totalCount","_x","ProfileStatusWithHooks","editMode","setEditMode","_useState3","_useState4","setStatus","useEffect","onDoubleClick","onChange","currentTarget","autoFocus","onBlur","ProfileInfo","profile","descriptionBlock","large","ProfileInfo_ProfileStatusWithHooks","posts","likesCount","profileReducer","newPost","newPostText","postId","Post","maxLength10","AddNewPostFormRedux","MyPosts","memo","postsElements","reverse","MyPosts_Post_Post","createRef","postsBlock","addPost","MyPostsContainer","profilePage","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","params","authorizedUserId","history","getUserProfile","components_Profile_Profile","withRouter","Header","header","loginBlock","login","logout","setAuthUserData","payload","getAuthUserData","_response$data$data","_login","authReducer","HeaderContainer","components_Header_Header","LoginReduxForm","formSummaryError","stopSubmit","_error","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","App","Header_HeaderContainer","components_Navbar_Navbar","Route","render","DialogsContainer","Profile_ProfileContainer","Users_UsersContainer","components_Login_Login","AppContainer","initializeApp","promise","Promise","all","SamuraiJSApp","BrowserRouter","es","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.206a46ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__1_En6\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader.6c3daf60.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__2imOE\",\"item\":\"Navbar_item__zmMk4\",\"activeLink\":\"Navbar_activeLink__3etBE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__ihtu9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItems\":\"Dialogs_dialogsItems__2sNe2\",\"active\":\"Dialogs_active__2sQhs\",\"messages\":\"Dialogs_messages__1w_Up\",\"message\":\"Dialogs_message__1xIDh\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n            </div>\r\n            <div className={`${s.item} ${s.active}`}>\r\n                <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <a>News</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Music</a>\r\n            </div>\r\n            <div className={s.item}>\r\n                <a>Settings</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","const SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your it-kamasutra?'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SEND_MESSAGE:\r\n            let body = action.newMessageBody;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\n\r\nexport default dialogsReducer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","export const required = value => {\n    if (value) return undefined;\n\n    return \"Field is required\";\n}\n\nexport const maxLengthCreator = (maxLength) => (value) => {\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\n    return undefined;\n}","import React from \"react\";\nimport styles from \"./FormsControls.module.css\";\nimport {required} from \"../../../utils/validators/validators\";\nimport {Field} from \"redux-form\";\n\nconst FormControl = ({input, meta: {touched, error}, children}) => {\n    const hasError = touched && error;\n    return (\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\n            <div>\n                {children}\n            </div>\n            {hasError && <span>{error}</span>}\n        </div>\n    )\n}\n\nexport const Textarea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\n}\n\nexport const Input = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\n}\n\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\n    <div>\n        <Field placeholder={placeholder} name={name}\n               validate={validators}\n               component={component}\n               {...props}\n        /> {text}\n    </div>\n)","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\n\nconst maxLength50 = maxLengthCreator(50);\n\nconst AddMessageForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={Textarea}\n                       validate={[required, maxLength50]}\n                       placeholder='Enter your message' name=\"newMessageBody\" />\n            </div>\n            <div>\n                <button>Send222</button>\n            </div>\n        </form>\n    )\n}\n\nexport default reduxForm({form: 'dialog-add-message-form'})(AddMessageForm);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map( d => <DialogItem name={d.name} key={d.id} id={d.id} />  );\r\n    let messagesElements = state.messages.map( m => <Message message={m.message} key={m.id} /> );\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"} /> ;\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{ messagesElements }</div>\r\n\r\n            </div>\r\n            <AddMessageForm onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToPropsForRedirect = (state) => ({\n    isAuth: state.auth.isAuth\n});\n\nexport const withAuthRedirect = (Component) => {\n\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Redirect to='/login' />\n\n            return <Component {...this.props}/>\n        }\n    }\n\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\n\n    return ConnectedAuthRedirectComponent;\n\n}","import React from 'react';\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);","import * as axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers:     {\n        \"API-KEY\": \"b1775b2f-c3a5-4509-8dc9-90b5629de7c3\"\n    }\n});\n\n\nexport const usersAPI = {\n    getUsers(currentPage = 1, pageSize = 10) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => {\n                return response.data;\n            });\n    },\n    follow(userId) {\n        return instance.post(`follow/${userId}`)\n    },\n    unfollow(userId) {\n        return instance.delete(`follow/${userId}`)\n    },\n    getProfile(userId) {\n        console.warn('Obsolete method. Please profileAPI object.')\n        return profileAPI.getProfile(userId);\n    }\n}\n\nexport const profileAPI = {\n    getProfile(userId) {\n        return instance.get(`profile/` + userId);\n    },\n    getStatus(userId) {\n        return instance.get(`profile/status/` + userId);\n    },\n    updateStatus(status) {\n        return instance.put(`profile/status`, { status: status });\n    }\n}\n\nexport const authAPI = {\n    me() {\n        return instance.get(`auth/me`);\n    },\n    login(email, password, rememberMe = false) {\n        return instance.post(`auth/login`, { email, password, rememberMe });\n    },\n    logout() {\n        return instance.delete(`auth/login`);\n    }\n}\n\n\n","\r\nexport const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\nimport {updateObjectInArray} from \"../utils/object-helpers\";\n\nconst FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\n\nlet initialState = {\n    users: [],\n    pageSize: 10,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: true,\n    followingInProgress: [],\n    fake: 10\n};\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true} )\n            }\n        case UNFOLLOW:\n            return {\n                ...state,\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false} )\n            }\n        case SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count}\n        }\n        case TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\n\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\nexport const setUsers = (users) => ({type: SET_USERS, users})\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\nexport const toggleFollowingProgress = (isFetching, userId) => ({\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\n    isFetching,\n    userId\n})\n\nexport const requestUsers = (page, pageSize) => {\n    return async (dispatch) => {\n        dispatch(toggleIsFetching(true));\n        dispatch(setCurrentPage(page));\n\n        let data = await usersAPI.getUsers(page, pageSize);\n        dispatch(toggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount));\n    }\n}\n\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\n    dispatch(toggleFollowingProgress(true, userId));\n    let response = await apiMethod(userId);\n\n    if (response.data.resultCode == 0) {\n        dispatch(actionCreator(userId));\n    }\n    dispatch(toggleFollowingProgress(false, userId));\n}\n\nexport const follow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess);\n    }\n}\nexport const unfollow = (userId) => {\n    return async (dispatch) => {\n        followUnfollowFlow(dispatch, userId, usersAPI.unfollow.bind(usersAPI), unfollowSuccess);\n    }\n}\n\nexport default usersReducer;","import React, {useState} from 'react';\nimport styles from \"./Paginator.module.css\";\nimport cn from \"classnames\";\n\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\n\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\n\n    let pages = [];\n    for (let i = 1; i <= pagesCount; i++) {\n        pages.push(i);\n    }\n\n    let portionCount = Math.ceil(pagesCount / portionSize);\n    let [portionNumber, setPortionNumber] = useState(1);\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\n    let rightPortionPageNumber = portionNumber * portionSize;\n\n\n    return <div className={styles.paginator}>\n        { portionNumber > 1 &&\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\n\n            {pages\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\n                .map((p) => {\n                return <span className={ cn({\n                    [styles.selectedPage]: currentPage === p\n                }, styles.pageNumber) }\n                             key={p}\n                             onClick={(e) => {\n                                 onPageChanged(p);\n                             }}>{p}</span>\n            })}\n        { portionCount > portionNumber &&\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\n\n\n    </div>\n}\n\nexport default Paginator;","import React from 'react';\nimport styles from \"./users.module.css\";\nimport userPhoto from \"../../assets/images/user.png\";\nimport {NavLink} from \"react-router-dom\";\n\nlet User = ({user, followingInProgress, unfollow, follow}) => {\n    return (\n       <div>\n                <span>\n                    <div>\n                       <NavLink to={'/profile/' + user.id}>\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto}\n                             className={styles.userPhoto}/>\n                       </NavLink>\n                    </div>\n                    <div>\n                        {user.followed\n                            ? <button disabled={followingInProgress\n                                .some(id => id === user.id)}\n                                      onClick={() => { unfollow(user.id) }}>\n                                Unfollow</button>\n                            : <button disabled={followingInProgress.some(id => id === user.id)}\n                                      onClick={() => { follow(user.id) }}>\n                                      Follow</button>}\n\n                    </div>\n                </span>\n                <span>\n                    <span>\n                        <div>{user.name}</div>\n                        <div>{user.status}</div>\n                    </span>\n                    <span>\n                        <div>{\"user.location.country\"}</div>\n                        <div>{\"user.location.city\"}</div>\n                    </span>\n                </span>\n            </div>)\n}\n\nexport default User;","import React from 'react';\nimport Paginator from \"../common/Paginator/Paginator\";\nimport User from \"./User\";\n\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, users, ...props}) => {\n    return <div>\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\n                   totalItemsCount={totalUsersCount} pageSize={pageSize}/>\n        <div>\n            {\n                users.map(u => <User user={u}\n                                     followingInProgress={props.followingInProgress}\n                                     key={u.id}\n                                     unfollow={props.unfollow}\n                                     follow={props.follow}\n                    />\n                )\n            }\n        </div>\n    </div>\n}\n\nexport default Users;","import React from 'react';\nimport preloader from \"../../../assets/images/preloader.svg\";\n\nlet Preloader = (props) => {\n    return <div  style={ { backgroundColor: 'white' } }>\n        <img src={preloader} />\n    </div>\n}\n\nexport default Preloader;","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n    return users.filter(u => true);\r\n})\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}\r\n\r\nexport const countSomethingDifficult = (state) => {\r\n    debugger\r\n    //for... math... big arrays\r\n    let count = 23;\r\n    return count;\r\n}","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n    follow,\n    setCurrentPage,\n    unfollow, toggleFollowingProgress, requestUsers\n} from '../../redux/users-reducer';\nimport Users from './Users';\nimport Preloader from \"../common/Preloader/Preloader\";\nimport {compose} from \"redux\";\nimport {\n    getCurrentPage,\n    getFollowingInProgress,\n    getIsFetching,\n    getPageSize,\n    getTotalUsersCount, getUsers\n} from \"../../redux/users-selectors\";\n\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        const {currentPage, pageSize} = this.props;\n        this.props.getUsers(currentPage, pageSize);\n    }\n\n    onPageChanged = (pageNumber) => {\n        const {pageSize} = this.props;\n        this.props.getUsers(pageNumber, pageSize);\n    }\n\n    render() {\n\n        return <>\n            {this.props.isFetching ? <Preloader/> : null}\n            <Users totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   currentPage={this.props.currentPage}\n                   onPageChanged={this.onPageChanged}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   followingInProgress={this.props.followingInProgress}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingInProgress: getFollowingInProgress(state)\n    }\n}\n\n\nexport default compose(\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers})\n)(UsersContainer)","import React, {useState, useEffect} from 'react';\nimport s from './ProfileInfo.module.css';\n\n\nconst ProfileStatusWithHooks = (props) => {\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status);\n\n    useEffect( () => {\n        setStatus(props.status);\n    }, [props.status] );\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div>\n            { !editMode &&\n            <div>\n                <span onDoubleClick={ activateEditMode }>{props.status || \"-------\"}</span>\n            </div>\n            }\n            {editMode &&\n            <div>\n                <input onChange={onStatusChange} autoFocus={true} onBlur={ deactivateEditMode }\n                       value={status} />\n            </div>\n            }\n        </div>\n    )\n}\n\n\nexport default ProfileStatusWithHooks;","import React from 'react';\n\nclass ProfileStatus extends React.Component {\n    state = {\n        editMode: false,\n        status: this.props.status\n    }\n\n    activateEditMode = () => {\n        this.setState({\n            editMode: true\n        });\n    }\n\n    deactivateEditMode() {\n        this.setState({\n            editMode: false\n        });\n        this.props.updateStatus(this.state.status);\n    }\n\n    onStatusChange = (e) => {\n        this.setState({\n            status: e.currentTarget.value\n        });\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n        if (prevProps.status !== this.props.status) {\n            this.setState({\n                status: this.props.status\n            });\n        }\n    }\n\n    render() {\n\n        return (\n            <div>\n                {!this.state.editMode &&\n                <div>\n                    <span onDoubleClick={this.activateEditMode}>{this.props.status || \"-------\"}</span>\n                </div>\n                }\n                {this.state.editMode &&\n                <div>\n                    <input onChange={this.onStatusChange} autoFocus={true}\n                           onBlur={this.deactivateEditMode.bind(this)}\n                           value={this.state.status}/>\n                </div>\n                }\n            </div>\n        )\n    }\n}\n\nexport default ProfileStatus;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/Preloader\";\r\nimport ProfileStatus from \"./ProfileStatus\"\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you?', likesCount: 12},\r\n        {id: 2, message: 'It\\'s my first post', likesCount: 11},\r\n        {id: 3, message: 'Blabla', likesCount: 11},\r\n        {id: 4, message: 'Dada', likesCount: 11}\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: ''\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n\r\n        case DELETE_POST:\r\n            return {...state, posts: state.posts.filter(p => p.id != action.postId)}\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div>\r\n            <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"}\r\n                   validate={[required, maxLength10]} />\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>;\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm({form: \"ProfileAddNewPostForm\"})(AddNewPostForm);\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount}/>);\r\n\r\n    let newPostElement = React.createRef();\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport {addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router-dom\";\nimport {compose} from \"redux\";\n\nclass ProfileContainer extends React.Component {\n\n    componentDidMount() {\n        let userId = this.props.match.params.userId;\n        if (!userId) {\n            userId = this.props.authorizedUserId;\n            if (!userId) {\n                this.props.history.push(\"/login\");\n            }\n        }\n        this.props.getUserProfile(userId);\n        this.props.getStatus(userId);\n    }\n\n    render() {\n       // console.log(\"RENDER PROFILE\");\n        return (\n            <Profile {...this.props}\n                     profile={this.props.profile}\n                     status={this.props.status}\n                     updateStatus={this.props.updateStatus}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    //console.log('mapStateToProps PROFILE')\n    return ({\n        profile: state.profilePage.profile,\n        status: state.profilePage.status,\n        authorizedUserId: state.auth.userId,\n        isAuth: state.auth.isAuth\n    })\n}\n\nexport default compose(\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}),\n    withRouter\n)(ProfileContainer);\n\n\n\n\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            { props.isAuth\r\n                ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>\r\n                : <NavLink to={'/login'}>Login</NavLink> }\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\n\nlet initialState = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n};\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({\n    type: SET_USER_DATA, payload:\n        {userId, email, login, isAuth}\n});\n\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n\n    if (response.data.resultCode === 0) {\n        let {id, login, email} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\nexport const login = (email, password, rememberMe) => async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n    if (response.data.resultCode === 0) {\n        dispatch(getAuthUserData())\n    } else {\n        let message = response.data.messages.length > 0 ? response.data.messages[0] : \"Some error\";\n        dispatch(stopSubmit(\"login\", {_error: message}));\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    let response = await authAPI.logout();\n\n    if (response.data.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n    }\n}\n\nexport default authReducer;","import React from 'react';\nimport Header from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {logout} from \"../../redux/auth-reducer\";\n\nclass HeaderContainer extends React.Component {\n\n\n    render() {\n        return <Header {...this.props} />\n    }\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth,\n    login: state.auth.login,\n});\n\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\nimport {required} from \"../../utils/validators/validators\";\nimport {connect} from \"react-redux\";\nimport {login} from \"../../redux/auth-reducer\";\nimport {Redirect} from \"react-router-dom\";\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\n\nconst LoginForm = ({handleSubmit, error}) => {\n    return (\n        <form onSubmit={handleSubmit}>\n            {createField(\"Email\", \"email\", [required], Input)}\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\n\n            {error && <div className={style.formSummaryError}>\n                {error}\n            </div>\n            }\n            <div>\n                <button>Login</button>\n            </div>\n        </form>\n    )\n}\n\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n    }\n\n    if (props.isAuth) {\n        return <Redirect to={\"/profile\"}/>\n    }\n\n    return <div>\n        <h1>Login</h1>\n        <LoginReduxForm onSubmit={onSubmit}/>\n    </div>\n}\nconst mapStateToProps = (state) => ({\n    isAuth: state.auth.isAuth\n})\n\nexport default connect(mapStateToProps, {login})(Login);","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\n\nlet initialState = {\n    initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true\n            }\n\n        default:\n            return state;\n    }\n}\n\n\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS});\n\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n\n    //dispatch(somethingelse());\n    //dispatch(somethingelse());\n    Promise.all([promise])\n        .then(() => {\n            dispatch(initializedSuccess());\n        });\n}\n\n\nexport default appReducer;","let initialState = {};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers,  composeEnhancers(applyMiddleware(thunkMiddleware)));\r\nwindow.__store__ = store;\r\n\r\nexport default store;","import React, {Component} from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport LoginPage from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redux/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store\";\n\nclass App extends Component {\n    componentDidMount() {\n        // this.props.initializeApp();\n    }\n\n    render() {\n        // if (!this.props.initialized) {\n        //     return <Preloader/>\n        // }\n\n        return (\n                    <div className='app-wrapper'>\n                        <HeaderContainer/>\n                        <Navbar/>\n                        <div className='app-wrapper-content'>\n                            <Route path='/dialogs'\n                                   render={() => <DialogsContainer/>}/>\n\n                            <Route path='/profile/:userId?'\n                                   render={() => <ProfileContainer/>}/>\n\n                            <Route path='/users'\n                                   render={() => <UsersContainer/>}/>\n\n                            <Route path='/login'\n                                   render={() => <LoginPage/>}/>\n                        </div>\n                    </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nlet AppContainer = compose(\n    withRouter,\n    connect(mapStateToProps, {initializeApp}))(App);\n\nconst SamuraiJSApp = (props) => {\n   return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer />\n        </Provider>\n    </BrowserRouter>\n}\n\nexport default SamuraiJSApp;\n","import * as serviceWorker from './serviceWorker';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport SamuraiJSApp from \"./App\";\n\nReactDOM.render(<SamuraiJSApp/>, document.getElementById('root'));\n\n\n// API\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__3oI2W\",\"error\":\"FormsControls_error__9lcue\",\"formSummaryError\":\"FormsControls_formSummaryError__1F2-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__18P4_\",\"pageNumber\":\"Paginator_pageNumber__xOsKi\",\"selectedPage\":\"Paginator_selectedPage__3SIki\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3cd8Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2ifKf\",\"posts\":\"MyPosts_posts__3tZ1c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"loginBlock\":\"Header_loginBlock__6mma5\"};"],"sourceRoot":""}